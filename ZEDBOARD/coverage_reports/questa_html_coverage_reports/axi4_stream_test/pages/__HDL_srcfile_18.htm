
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>--05062019 [05-06-2019]</q-m>
<a name="2"><q-n>     2  </q-n></a><q-w>library</q-w> ieee;
<a name="3"><q-n>     3  </q-n></a><q-w>use</q-w> ieee.std_logic_1164.<q-w>all</q-w>;
<a name="4"><q-n>     4  </q-n></a><q-w>use</q-w> ieee.numeric_std.<q-w>all</q-w>;
<a name="5"><q-n>     5  </q-n></a><q-w>use</q-w> work.fixed_pkg.<q-w>all</q-w>;
<a name="6"><q-n>     6  </q-n></a><q-w>use</q-w> work.float_pkg.<q-w>all</q-w>;
<a name="7"><q-n>     7  </q-n></a><q-w>use</q-w> work.constantspackage.<q-w>all</q-w>;
<a name="8"><q-n>     8  </q-n></a><q-w>use</q-w> work.vpfRecords.<q-w>all</q-w>;
<a name="9"><q-n>     9  </q-n></a><q-w>use</q-w> work.portspackage.<q-w>all</q-w>;
<a name="10"><q-n>     10  </q-n></a><q-w>entity</q-w> hsl_c <q-w>is</q-w>
<a name="11"><q-n>     11  </q-n></a><q-w>generic</q-w> (
<a name="12"><q-n>     12  </q-n></a>    i_data_width   : <q-t>integer</q-w> := 8);
<a name="13"><q-n>     13  </q-n></a><q-w>port</q-w> (
<a name="14"><q-n>     14  </q-n></a>    clk            : <q-a>in</q-w>  <q-t>std_logic</q-w>;
<a name="15"><q-n>     15  </q-n></a>    reset          : <q-a>in</q-w>  <q-t>std_logic</q-w>;
<a name="16"><q-n>     16  </q-n></a>    iRgb           : <q-a>in</q-w> channel;
<a name="17"><q-n>     17  </q-n></a>    oHsl           : <q-a>out</q-w> hslChannel);
<a name="18"><q-n>     18  </q-n></a><q-w>end</q-w> hsl_c;
<a name="19"><q-n>     19  </q-n></a><q-w>architecture</q-w> behavioral <q-w>of</q-w> hsl_c <q-w>is</q-w>
<a name="20"><q-n>     20  </q-n></a>    <q-m>--RGB Floating</q-m>
<a name="21"><q-n>     21  </q-n></a>    <q-w>signal</q-w> uFs1Rgb       : rgbToUfRecord;
<a name="22"><q-n>     22  </q-n></a>    <q-w>signal</q-w> uFs2Rgb       : rgbToUfRecord;
<a name="23"><q-n>     23  </q-n></a>    <q-w>signal</q-w> uFs3Rgb       : rgbToUfRecord;
<a name="24"><q-n>     24  </q-n></a>    <q-m>--RGB Max Min</q-m>
<a name="25"><q-n>     25  </q-n></a>    <q-w>signal</q-w> rgbMax        : ufixed(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="26"><q-n>     26  </q-n></a>    <q-w>signal</q-w> rgbMin        : ufixed(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="27"><q-n>     27  </q-n></a>    <q-w>signal</q-w> maxValue      : ufixed(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="28"><q-n>     28  </q-n></a>    <q-w>signal</q-w> minValue      : ufixed(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="29"><q-n>     29  </q-n></a>    <q-w>signal</q-w> rgbDelta      : ufixed(8 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="30"><q-n>     30  </q-n></a>    <q-w>signal</q-w> maxMinSum     : ufixed(8 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="31"><q-n>     31  </q-n></a>    <q-m>--Valid</q-m>
<a name="32"><q-n>     32  </q-n></a>    <q-w>signal</q-w> valid1xD      : <q-t>std_logic</q-w> := '0';
<a name="33"><q-n>     33  </q-n></a>    <q-w>signal</q-w> valid2xD      : <q-t>std_logic</q-w> := '0';
<a name="34"><q-n>     34  </q-n></a>    <q-w>signal</q-w> valid3xD      : <q-t>std_logic</q-w> := '0';
<a name="35"><q-n>     35  </q-n></a>    <q-w>signal</q-w> valid4xD      : <q-t>std_logic</q-w> := '0';
<a name="36"><q-n>     36  </q-n></a>    <q-m>--HValue</q-m>
<a name="37"><q-n>     37  </q-n></a>    <q-w>signal</q-w> hValue1xD     : <q-t>std_logic_vector</q-w>(i_data_width-1 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="38"><q-n>     38  </q-n></a>    <q-w>signal</q-w> hValue2xD     : <q-t>std_logic_vector</q-w>(i_data_width-1 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="39"><q-n>     39  </q-n></a>    <q-w>signal</q-w> hValue3xD     : <q-t>std_logic_vector</q-w>(i_data_width-1 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="40"><q-n>     40  </q-n></a>    <q-w>signal</q-w> hValue4xD     : <q-t>std_logic_vector</q-w>(i_data_width-1 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="41"><q-n>     41  </q-n></a>    <q-m>--Lum</q-m>
<a name="42"><q-n>     42  </q-n></a>    <q-w>signal</q-w> lumValueQuot  : ufixed(8 <q-w>downto</q-w> -9) :=(<q-w>others</q-w> =&gt; '0');
<a name="43"><q-n>     43  </q-n></a>    <q-w>signal</q-w> lumValue      : ufixed(7 <q-w>downto</q-w> 0)  :=(<q-w>others</q-w> =&gt; '0');
<a name="44"><q-n>     44  </q-n></a>    <q-w>signal</q-w> lumValue1xD   : <q-t>std_logic_vector</q-w>(i_data_width-1 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="45"><q-n>     45  </q-n></a>    <q-w>signal</q-w> lumValue2xD   : <q-t>std_logic_vector</q-w>(i_data_width-1 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="46"><q-n>     46  </q-n></a>    <q-m>--Saturate</q-m>
<a name="47"><q-n>     47  </q-n></a>    <q-w>signal</q-w> satUfTop      : ufixed(17 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="48"><q-n>     48  </q-n></a>    <q-w>signal</q-w> satUfBott     : ufixed(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="49"><q-n>     49  </q-n></a>    <q-w>signal</q-w> satValueQuot  : ufixed(17 <q-w>downto</q-w> -8) :=(<q-w>others</q-w> =&gt; '0');
<a name="50"><q-n>     50  </q-n></a>    <q-w>signal</q-w> satValue      : ufixed(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="51"><q-n>     51  </q-n></a>    <q-w>signal</q-w> satValue1xD   : <q-t>std_logic_vector</q-w>(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="52"><q-n>     52  </q-n></a>    <q-m>--Hue Rsiz</q-m>
<a name="53"><q-n>     53  </q-n></a>    <q-w>signal</q-w> hueTop        : ufixed(17 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="54"><q-n>     54  </q-n></a>    <q-w>signal</q-w> hueBot        : ufixed(8 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="55"><q-n>     55  </q-n></a>    <q-w>signal</q-w> hueQuot       : ufixed(17 <q-w>downto</q-w> -9) :=(<q-w>others</q-w> =&gt; '0');
<a name="56"><q-n>     56  </q-n></a>    <q-w>signal</q-w> hueQuot1x     : ufixed(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="57"><q-n>     57  </q-n></a>    <q-w>signal</q-w> hueDeg        : ufixed(26 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="58"><q-n>     58  </q-n></a>    <q-w>signal</q-w> hueDeg1x      : ufixed(7 <q-w>downto</q-w> 0) :=(<q-w>others</q-w> =&gt; '0');
<a name="59"><q-n>     59  </q-n></a>    <q-w>signal</q-w> hueValue      : <q-t>unsigned</q-w>(7 <q-w>downto</q-w> 0):= (<q-w>others</q-w> =&gt; '0');
<a name="60"><q-n>     60  </q-n></a><q-w>begin</q-w>
<a name="61"><q-n>     61  </q-n></a>rgbToUfP: <q-w>process</q-w> (clk,reset)<q-w>begin</q-w>
<a name="62"><q-n>     62  </q-n></a>    <q-w>if</q-w> (reset = lo) <q-w>then</q-w>
<a name="63"><q-n>     63  </q-n></a>        uFs1Rgb.red    &lt;= (<q-w>others</q-w> =&gt; '0');
<a name="64"><q-n>     64  </q-n></a>        uFs1Rgb.green  &lt;= (<q-w>others</q-w> =&gt; '0');
<a name="65"><q-n>     65  </q-n></a>        uFs1Rgb.blue   &lt;= (<q-w>others</q-w> =&gt; '0');
<a name="66"><q-n>     66  </q-n></a>    <q-w>elsif</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="67"><q-n>     67  </q-n></a>        uFs1Rgb.red    &lt;= to_ufixed(iRgb.red,uFs1Rgb.red);
<a name="68"><q-n>     68  </q-n></a>        uFs1Rgb.green  &lt;= to_ufixed(iRgb.green,uFs1Rgb.green);
<a name="69"><q-n>     69  </q-n></a>        uFs1Rgb.blue   &lt;= to_ufixed(iRgb.blue,uFs1Rgb.blue);
<a name="70"><q-n>     70  </q-n></a>        uFs1Rgb.valid  &lt;= iRgb.valid;
<a name="71"><q-n>     71  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>; 
<a name="72"><q-n>     72  </q-n></a><q-w>end</q-w> <q-w>process</q-w> rgbToUfP;
<a name="73"><q-n>     73  </q-n></a>pipRgbD2P: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="74"><q-n>     74  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="75"><q-n>     75  </q-n></a>        uFs2Rgb &lt;= uFs1Rgb;
<a name="76"><q-n>     76  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="77"><q-n>     77  </q-n></a><q-w>end</q-w> <q-w>process</q-w> pipRgbD2P;
<a name="78"><q-n>     78  </q-n></a>pipRgbD3P: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="79"><q-n>     79  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="80"><q-n>     80  </q-n></a>        uFs3Rgb &lt;= uFs2Rgb;
<a name="81"><q-n>     81  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="82"><q-n>     82  </q-n></a><q-w>end</q-w> <q-w>process</q-w> pipRgbD3P;
<a name="83"><q-n>     83  </q-n></a>rgbMaxP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="84"><q-n>     84  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="85"><q-n>     85  </q-n></a>        <q-w>if</q-w> ((uFs1Rgb.red &gt;= uFs1Rgb.green) <q-w>and</q-w> (uFs1Rgb.red &gt;= uFs1Rgb.blue)) <q-w>then</q-w>
<a name="86"><q-n>     86  </q-n></a>            rgbMax &lt;= uFs1Rgb.red;
<a name="87"><q-n>     87  </q-n></a>        <q-w>elsif</q-w>((uFs1Rgb.green &gt;= uFs1Rgb.red) <q-w>and</q-w> (uFs1Rgb.green &gt;= uFs1Rgb.blue))<q-w>then</q-w>
<a name="88"><q-n>     88  </q-n></a>            rgbMax &lt;= uFs1Rgb.green;
<a name="89"><q-n>     89  </q-n></a>        <q-w>else</q-w>
<a name="90"><q-n>     90  </q-n></a>            rgbMax &lt;= uFs1Rgb.blue;
<a name="91"><q-n>     91  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="92"><q-n>     92  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="93"><q-n>     93  </q-n></a><q-w>end</q-w> <q-w>process</q-w> rgbMaxP;
<a name="94"><q-n>     94  </q-n></a>rgbMinP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="95"><q-n>     95  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="96"><q-n>     96  </q-n></a>        <q-w>if</q-w> ((uFs1Rgb.red &lt;= uFs1Rgb.green) <q-w>and</q-w> (uFs1Rgb.red &lt;= uFs1Rgb.blue)) <q-w>then</q-w>
<a name="97"><q-n>     97  </q-n></a>            rgbMin &lt;= uFs1Rgb.red;
<a name="98"><q-n>     98  </q-n></a>        <q-w>elsif</q-w>((uFs1Rgb.green &lt;= uFs1Rgb.red) <q-w>and</q-w> (uFs1Rgb.green &lt;= uFs1Rgb.blue)) <q-w>then</q-w>
<a name="99"><q-n>     99  </q-n></a>            rgbMin &lt;= uFs1Rgb.green;
<a name="100"><q-n>     100  </q-n></a>        <q-w>else</q-w>
<a name="101"><q-n>     101  </q-n></a>            rgbMin &lt;= uFs1Rgb.blue;
<a name="102"><q-n>     102  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="103"><q-n>     103  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="104"><q-n>     104  </q-n></a><q-w>end</q-w> <q-w>process</q-w> rgbMinP;
<a name="105"><q-n>     105  </q-n></a>rgbDeltaP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="106"><q-n>     106  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="107"><q-n>     107  </q-n></a>        rgbDelta      &lt;= rgbMax - rgbMin;
<a name="108"><q-n>     108  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="109"><q-n>     109  </q-n></a><q-w>end</q-w> <q-w>process</q-w> rgbDeltaP;
<a name="110"><q-n>     110  </q-n></a>maxMinUfSumP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="111"><q-n>     111  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="112"><q-n>     112  </q-n></a>        maxMinSum    &lt;= rgbMax + rgbMin;
<a name="113"><q-n>     113  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="114"><q-n>     114  </q-n></a><q-w>end</q-w> <q-w>process</q-w> maxMinUfSumP;
<a name="115"><q-n>     115  </q-n></a>pipRgbMaxUfD1P: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="116"><q-n>     116  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="117"><q-n>     117  </q-n></a>        maxValue          &lt;= rgbMax;
<a name="118"><q-n>     118  </q-n></a>        minValue          &lt;= rgbMin;
<a name="119"><q-n>     119  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="120"><q-n>     120  </q-n></a><q-w>end</q-w> <q-w>process</q-w> pipRgbMaxUfD1P;
<a name="121"><q-n>     121  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="122"><q-n>     122  </q-n></a><q-m>-- LUM</q-m>
<a name="123"><q-n>     123  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="124"><q-n>     124  </q-n></a>lumP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="125"><q-n>     125  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="126"><q-n>     126  </q-n></a>        lumValueQuot   &lt;= maxMinSum / 2.0;
<a name="127"><q-n>     127  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="128"><q-n>     128  </q-n></a><q-w>end</q-w> <q-w>process</q-w> lumP;
<a name="129"><q-n>     129  </q-n></a>lumResizeP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="130"><q-n>     130  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="131"><q-n>     131  </q-n></a>        lumValue &lt;= resize(lumValueQuot,lumValue);
<a name="132"><q-n>     132  </q-n></a>        lumValue1xD &lt;= <q-t>std_logic_vector</q-w>(to_unsigned(lumValue,8));
<a name="133"><q-n>     133  </q-n></a>        lumValue2xD &lt;= lumValue1xD;
<a name="134"><q-n>     134  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="135"><q-n>     135  </q-n></a><q-w>end</q-w> <q-w>process</q-w> lumResizeP;
<a name="136"><q-n>     136  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="137"><q-n>     137  </q-n></a><q-m>-- VALUE</q-m>
<a name="138"><q-n>     138  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="139"><q-n>     139  </q-n></a>hValueP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="140"><q-n>     140  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="141"><q-n>     141  </q-n></a>        hValue1xD &lt;= <q-t>std_logic_vector</q-w>(to_unsigned(maxValue,8));
<a name="142"><q-n>     142  </q-n></a>        hValue2xD &lt;= hValue1xD;
<a name="143"><q-n>     143  </q-n></a>        hValue3xD &lt;= hValue2xD;
<a name="144"><q-n>     144  </q-n></a>        hValue4xD &lt;= hValue3xD;
<a name="145"><q-n>     145  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="146"><q-n>     146  </q-n></a><q-w>end</q-w> <q-w>process</q-w> hValueP;
<a name="147"><q-n>     147  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="148"><q-n>     148  </q-n></a><q-m>-- SATURATE</q-m>
<a name="149"><q-n>     149  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="150"><q-n>     150  </q-n></a>satNumniatorUfP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="151"><q-n>     151  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="152"><q-n>     152  </q-n></a>        satUfTop      &lt;= 256.0 * rgbDelta;
<a name="153"><q-n>     153  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="154"><q-n>     154  </q-n></a><q-w>end</q-w> <q-w>process</q-w> satNumniatorUfP;
<a name="155"><q-n>     155  </q-n></a>satDominaUfCalP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="156"><q-n>     156  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="157"><q-n>     157  </q-n></a>        <q-w>if</q-w> (maxValue &gt; 0) <q-w>then</q-w>
<a name="158"><q-n>     158  </q-n></a>            satUfBott &lt;= maxValue;
<a name="159"><q-n>     159  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="160"><q-n>     160  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="161"><q-n>     161  </q-n></a><q-w>end</q-w> <q-w>process</q-w> satDominaUfCalP;
<a name="162"><q-n>     162  </q-n></a>satDividerP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="163"><q-n>     163  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="164"><q-n>     164  </q-n></a>        satValueQuot &lt;= satUfTop / satUfBott;
<a name="165"><q-n>     165  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="166"><q-n>     166  </q-n></a><q-w>end</q-w> <q-w>process</q-w> satDividerP;
<a name="167"><q-n>     167  </q-n></a>satDividerResizeP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="168"><q-n>     168  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="169"><q-n>     169  </q-n></a>        satValue    &lt;= resize(satValueQuot,satValue);
<a name="170"><q-n>     170  </q-n></a>        satValue1xD &lt;= <q-t>std_logic_vector</q-w>(to_unsigned(satValue,8));
<a name="171"><q-n>     171  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="172"><q-n>     172  </q-n></a><q-w>end</q-w> <q-w>process</q-w> satDividerResizeP;
<a name="173"><q-n>     173  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="174"><q-n>     174  </q-n></a><q-m>-- HUE</q-m>
<a name="175"><q-n>     175  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="176"><q-n>     176  </q-n></a>hueBottomP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="177"><q-n>     177  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="178"><q-n>     178  </q-n></a>        <q-w>if</q-w> (rgbDelta &gt; 0) <q-w>then</q-w>
<a name="179"><q-n>     179  </q-n></a>            hueBot &lt;= rgbDelta;
<a name="180"><q-n>     180  </q-n></a>        <q-w>else</q-w>
<a name="181"><q-n>     181  </q-n></a>            hueBot &lt;= to_ufixed (6.0,hueBot);
<a name="182"><q-n>     182  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="183"><q-n>     183  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="184"><q-n>     184  </q-n></a><q-w>end</q-w> <q-w>process</q-w> hueBottomP;
<a name="185"><q-n>     185  </q-n></a>hueP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="186"><q-n>     186  </q-n></a>  <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="187"><q-n>     187  </q-n></a>    <q-w>if</q-w> (uFs3Rgb.red  = maxValue) <q-w>then</q-w>
<a name="188"><q-n>     188  </q-n></a>            hueDeg &lt;= to_ufixed (0.0,hueDeg);
<a name="189"><q-n>     189  </q-n></a>        <q-w>if</q-w> (uFs3Rgb.green &gt;= uFs3Rgb.blue) <q-w>then</q-w>
<a name="190"><q-n>     190  </q-n></a>            hueTop        &lt;= (uFs3Rgb.green - uFs3Rgb.blue) * 43;
<a name="191"><q-n>     191  </q-n></a>        <q-w>else</q-w>
<a name="192"><q-n>     192  </q-n></a>            hueTop        &lt;= (uFs3Rgb.blue - uFs3Rgb.green) * 43;
<a name="193"><q-n>     193  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="194"><q-n>     194  </q-n></a>    <q-w>elsif</q-w>(uFs3Rgb.green = maxValue)  <q-w>then</q-w>
<a name="195"><q-n>     195  </q-n></a>            hueDeg &lt;= to_ufixed (85.0,hueDeg);
<a name="196"><q-n>     196  </q-n></a>        <q-w>if</q-w> (uFs3Rgb.blue &gt;= uFs3Rgb.red ) <q-w>then</q-w>
<a name="197"><q-n>     197  </q-n></a>            hueTop       &lt;= (uFs3Rgb.blue - uFs3Rgb.red ) * 43;
<a name="198"><q-n>     198  </q-n></a>        <q-w>else</q-w>
<a name="199"><q-n>     199  </q-n></a>            hueTop       &lt;= (uFs3Rgb.red  - uFs3Rgb.blue) * 43;
<a name="200"><q-n>     200  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="201"><q-n>     201  </q-n></a>    <q-w>elsif</q-w>(uFs3Rgb.blue = maxValue)  <q-w>then</q-w>
<a name="202"><q-n>     202  </q-n></a>            hueDeg &lt;= to_ufixed (171.0,hueDeg);
<a name="203"><q-n>     203  </q-n></a>        <q-w>if</q-w> (uFs3Rgb.red  &gt;= uFs3Rgb.green) <q-w>then</q-w>
<a name="204"><q-n>     204  </q-n></a>            hueTop       &lt;= (uFs3Rgb.red  - uFs3Rgb.green) * 43;
<a name="205"><q-n>     205  </q-n></a>        <q-w>else</q-w>
<a name="206"><q-n>     206  </q-n></a>            hueTop       &lt;= (uFs3Rgb.green - uFs3Rgb.red ) * 43;
<a name="207"><q-n>     207  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="208"><q-n>     208  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="209"><q-n>     209  </q-n></a>  <q-w>end</q-w> <q-w>if</q-w>;
<a name="210"><q-n>     210  </q-n></a><q-w>end</q-w> <q-w>process</q-w> hueP;
<a name="211"><q-n>     211  </q-n></a>hueDividerP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="212"><q-n>     212  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="213"><q-n>     213  </q-n></a>        hueQuot  &lt;= hueTop / hueBot;
<a name="214"><q-n>     214  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="215"><q-n>     215  </q-n></a><q-w>end</q-w> <q-w>process</q-w> hueDividerP;
<a name="216"><q-n>     216  </q-n></a>hueDegreeP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="217"><q-n>     217  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="218"><q-n>     218  </q-n></a>        hueDeg1x       &lt;= resize(hueDeg,hueDeg1x);
<a name="219"><q-n>     219  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="220"><q-n>     220  </q-n></a><q-w>end</q-w> <q-w>process</q-w> hueDegreeP;
<a name="221"><q-n>     221  </q-n></a>hueDividerResizeP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="222"><q-n>     222  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="223"><q-n>     223  </q-n></a>        hueQuot1x &lt;= resize(hueQuot,hueQuot1x);
<a name="224"><q-n>     224  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="225"><q-n>     225  </q-n></a><q-w>end</q-w> <q-w>process</q-w> hueDividerResizeP;
<a name="226"><q-n>     226  </q-n></a>hueValueP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="227"><q-n>     227  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="228"><q-n>     228  </q-n></a>        hueValue &lt;= (to_unsigned(hueQuot1x,8) + to_unsigned(hueDeg1x,8));
<a name="229"><q-n>     229  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="230"><q-n>     230  </q-n></a><q-w>end</q-w> <q-w>process</q-w> hueValueP;
<a name="231"><q-n>     231  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="232"><q-n>     232  </q-n></a><q-m>-- VALID</q-m>
<a name="233"><q-n>     233  </q-n></a><q-m>-------------------------------------------------</q-m>
<a name="234"><q-n>     234  </q-n></a>pipValidP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="235"><q-n>     235  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="236"><q-n>     236  </q-n></a>        valid1xD    &lt;= uFs3Rgb.valid;
<a name="237"><q-n>     237  </q-n></a>        valid2xD    &lt;= valid1xD;
<a name="238"><q-n>     238  </q-n></a>        valid3xD    &lt;= valid2xD;
<a name="239"><q-n>     239  </q-n></a>        valid4xD    &lt;= valid3xD;
<a name="240"><q-n>     240  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="241"><q-n>     241  </q-n></a><q-w>end</q-w> <q-w>process</q-w> pipValidP;
<a name="242"><q-n>     242  </q-n></a>hsvOut: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="243"><q-n>     243  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w> 
<a name="244"><q-n>     244  </q-n></a>        oHsl.h      &lt;= <q-t>std_logic_vector</q-w>(hueValue(i_data_width-1 <q-w>downto</q-w> 0));
<a name="245"><q-n>     245  </q-n></a>        oHsl.s      &lt;= satValue1xD;
<a name="246"><q-n>     246  </q-n></a>        oHsl.l      &lt;= lumValue2xD;
<a name="247"><q-n>     247  </q-n></a>        oHsl.valid  &lt;= valid4xD;
<a name="248"><q-n>     248  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="249"><q-n>     249  </q-n></a><q-w>end</q-w> <q-w>process</q-w> hsvOut;
<a name="250"><q-n>     250  </q-n></a><q-w>end</q-w> behavioral;</pre>
</tt>

  
</body>
</html>
