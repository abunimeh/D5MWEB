var g_sourceLines = [
'--05062019 [05-06-2019]',
'library ieee;',
'use ieee.std_logic_1164.all;',
'use ieee.numeric_std.all;',
'use work.constantspackage.all;',
'use work.vpfRecords.all;',
'use work.portspackage.all;',
'entity CoefMult is',
'port (',
'    clk            : in std_logic;',
'    rst_l          : in std_logic;',
'    iKcoeff        : in kernelCoeff;',
'    oCoeffProd     : out kCoefFiltFloat);',
'end CoefMult;',
'architecture behavioral of CoefMult is',
'    constant fractValue     : std_logic_vector(31 downto 0):= x"3a83126f";--0.001',
'    constant rgbLevelValue  : std_logic_vector(31 downto 0):= x"43800000";--256',
'    constant FloatMaxLat    : integer   := 20;',
'    type kCoefSt is (kCoefCgainState,kCoefSharpState,kCoefBlureState,kCoefYcbcrState,kCoefXSobeState,kCoefYSobeState,kCoefEmbosState,kCoefUpdaterState);',
'    signal kCoefStates      : kCoefSt; ',
'    signal kCoefVals        : kCoefFilters;',
'    signal kCoeffDWord      : kernelCoeDWord;',
'    signal kCofFrtProd      : kernelCoeDWord;',
'    signal upCtr            : integer   :=zero;',
'    signal kCoeffValid      : std_logic := hi;',
'    signal fractLevel       : std_logic_vector(31 downto 0):= (others =&gt; lo);',
'    signal kCof             : kernelCoeff;',
'begin',
'        kCoefVals.kCoeffYcbcr.k1   &lt;= x"0101";--  0.257',
'        kCoefVals.kCoeffYcbcr.k2   &lt;= x"01F8";--  0.504',
'        kCoefVals.kCoeffYcbcr.k3   &lt;= x"0062";--  0.098',
'        kCoefVals.kCoeffYcbcr.k4   &lt;= x"FF6C";-- -0.148',
'        kCoefVals.kCoeffYcbcr.k5   &lt;= x"FEDD";-- -0.291',
'        kCoefVals.kCoeffYcbcr.k6   &lt;= x"01B7";--  0.439',
'        kCoefVals.kCoeffYcbcr.k7   &lt;= x"01B7";--  0.439',
'        kCoefVals.kCoeffYcbcr.k8   &lt;= x"FE90";-- -0.368',
'        kCoefVals.kCoeffYcbcr.k9   &lt;= x"FFB9";-- -0.071',
'        kCoefVals.kCoeffYcbcr.kSet &lt;= kCoefYcbcrIndex;',
'        kCoefVals.kCoeffCgain.k1   &lt;= x"05DC";--  1375  =  1.375',
'        kCoefVals.kCoeffCgain.k2   &lt;= x"FF06";-- -250   = -0.250',
'        kCoefVals.kCoeffCgain.k3   &lt;= x"FF06";-- -500   = -0.500',
'        kCoefVals.kCoeffCgain.k4   &lt;= x"FF06";-- -500   = -0.500',
'        kCoefVals.kCoeffCgain.k5   &lt;= x"05DC";--  1375  =  1.375',
'        kCoefVals.kCoeffCgain.k6   &lt;= x"FF06";-- -250   = -0.250',
'        kCoefVals.kCoeffCgain.k7   &lt;= x"FF06";-- -250   = -0.250',
'        kCoefVals.kCoeffCgain.k8   &lt;= x"FF06";-- -500   = -0.500',
'        kCoefVals.kCoeffCgain.k9   &lt;= x"05DC";--  1375  =  1.375',
'        kCoefVals.kCoeffCgain.kSet &lt;= kCoefCgainIndex;',
'        kCoefVals.kCoeffSharp.k1   &lt;= x"0000";--  0',
'        kCoefVals.kCoeffSharp.k2   &lt;= x"FE0C";-- -0.5',
'        kCoefVals.kCoeffSharp.k3   &lt;= x"0000";--  0',
'        kCoefVals.kCoeffSharp.k4   &lt;= x"FE0C";-- -0.5',
'        kCoefVals.kCoeffSharp.k5   &lt;= x"0BB8";--  3',
'        kCoefVals.kCoeffSharp.k6   &lt;= x"FE0C";-- -0.5',
'        kCoefVals.kCoeffSharp.k7   &lt;= x"0000";--  0',
'        kCoefVals.kCoeffSharp.k8   &lt;= x"FE0C";-- -0.5',
'        kCoefVals.kCoeffSharp.k9   &lt;= x"0000";--  0',
'        kCoefVals.kCoeffSharp.kSet &lt;= kCoefSharpIndex;',
'        kCoefVals.kCoeffBlure.k1   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.k2   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.k3   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.k4   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.k5   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.k6   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.k7   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.k8   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.k9   &lt;= x"006F";-- 0.111',
'        kCoefVals.kCoeffBlure.kSet &lt;= kCoefBlureIndex;',
'        kCoefVals.kCoefXSobel.k1   &lt;= x"FC18";--  [-1]',
'        kCoefVals.kCoefXSobel.k2   &lt;= x"0000";--  [+0]',
'        kCoefVals.kCoefXSobel.k3   &lt;= x"03E8";--  [+1]',
'        kCoefVals.kCoefXSobel.k4   &lt;= x"F830";--  [-2]',
'        kCoefVals.kCoefXSobel.k5   &lt;= x"0000";--  [+0]',
'        kCoefVals.kCoefXSobel.k6   &lt;= x"07D0";--  [+2]',
'        kCoefVals.kCoefXSobel.k7   &lt;= x"FC18";--  [-1]',
'        kCoefVals.kCoefXSobel.k8   &lt;= x"0000";--  [+0]',
'        kCoefVals.kCoefXSobel.k9   &lt;= x"03E8";--  [+1]',
'        kCoefVals.kCoefXSobel.kSet &lt;= kCoefSobeXIndex;',
'        kCoefVals.kCoefYSobel.k1   &lt;= x"03E8";--  [+1]',
'        kCoefVals.kCoefYSobel.k2   &lt;= x"07D0";--  [+2]',
'        kCoefVals.kCoefYSobel.k3   &lt;= x"03E8";--  [+1]',
'        kCoefVals.kCoefYSobel.k4   &lt;= x"F830";--  [-2]',
'        kCoefVals.kCoefYSobel.k5   &lt;= x"0000";--  [+0]',
'        kCoefVals.kCoefYSobel.k6   &lt;= x"07D0";--  [+2]',
'        kCoefVals.kCoefYSobel.k7   &lt;= x"FC18";--  [-1]',
'        kCoefVals.kCoefYSobel.k8   &lt;= x"F830";--  [-2]',
'        kCoefVals.kCoefYSobel.k9   &lt;= x"FC18";--  [-1]',
'        kCoefVals.kCoefYSobel.kSet &lt;= kCoefSobeYIndex;',
'        kCoefVals.kCoeffEmbos.k1   &lt;= x"FC18";-- -1',
'        kCoefVals.kCoeffEmbos.k2   &lt;= x"FC18";-- -1',
'        kCoefVals.kCoeffEmbos.k3   &lt;= x"0000";--  0',
'        kCoefVals.kCoeffEmbos.k4   &lt;= x"FC18";-- -1',
'        kCoefVals.kCoeffEmbos.k5   &lt;= x"0000";--  0',
'        kCoefVals.kCoeffEmbos.k6   &lt;= x"03E8";--  1',
'        kCoefVals.kCoeffEmbos.k7   &lt;= x"0000";--  0',
'        kCoefVals.kCoeffEmbos.k8   &lt;= x"03E8";--  1',
'        kCoefVals.kCoeffEmbos.k9   &lt;= x"03E8";--  1',
'        kCoefVals.kCoeffEmbos.kSet &lt;= kCoefEmbosIndex;',
'        kCoefVals.kCoef1Cgain.k1   &lt;= x"055F";--  1375  =  1.375',
'        kCoefVals.kCoef1Cgain.k2   &lt;= x"FF83";-- -125   = -0.125',
'        kCoefVals.kCoef1Cgain.k3   &lt;= x"FF06";-- -250   = -0.250',
'        kCoefVals.kCoef1Cgain.k4   &lt;= x"FF06";-- -250   = -0.250',
'        kCoefVals.kCoef1Cgain.k5   &lt;= x"055F";--  1375  =  1.375',
'        kCoefVals.kCoef1Cgain.k6   &lt;= x"FF83";-- -125   = -0.125',
'        kCoefVals.kCoef1Cgain.k7   &lt;= x"FF83";-- -125   = -0.125',
'        kCoefVals.kCoef1Cgain.k8   &lt;= x"FF06";-- -250   = -0.250',
'        kCoefVals.kCoef1Cgain.k9   &lt;= x"055F";--  1375  =  1.375',
'        kCoefVals.kCoef1Cgain.kSet &lt;= kCoefCgai1Index;',
'        ',
'FloatMaxLatP: process(clk) begin',
'    if (rising_edge (clk)) then',
'        if (rst_l = lo) then',
'            upCtr &lt;= zero;',
'        else',
'            if (upCtr &lt; (FloatMaxLat + one)) then',
'                upCtr  &lt;= upCtr + one;',
'            else',
'                upCtr &lt;= zero;',
'            end if;',
'        end if;',
'    end if;',
'end process FloatMaxLatP;',
'kCoefStP: process (clk) begin',
'    if (rising_edge (clk)) then',
'        if (rst_l = lo) then',
'            kCoefStates &lt;= kCoefYcbcrState;',
'        else',
'        case (kCoefStates) is',
'        when kCoefYcbcrState =&gt;	',
'                kCof &lt;= kCoefVals.kCoeffYcbcr;',
'            if (upCtr = FloatMaxLat) then',
'                oCoeffProd.kCoeffYcbcr &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffYcbcr.kSet &lt;= kCoefVals.kCoeffYcbcr.kSet;',
'                kCoefStates &lt;= kCoefCgainState;',
'            end if;',
'        when kCoefCgainState =&gt;',
'            kCof &lt;= kCoefVals.kCoeffCgain;',
'            if (upCtr = FloatMaxLat) then',
'                oCoeffProd.kCoeffCgain &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffCgain.kSet &lt;= kCoefVals.kCoeffCgain.kSet;',
'                kCoefStates &lt;= kCoefSharpState;',
'            end if;',
'        when kCoefSharpState =&gt;',
'            kCof &lt;= kCoefVals.kCoeffSharp;',
'            if (upCtr = FloatMaxLat) then',
'                oCoeffProd.kCoeffSharp &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffSharp.kSet &lt;= kCoefVals.kCoeffSharp.kSet;',
'                kCoefStates &lt;= kCoefBlureState;',
'            end if;',
'        when kCoefBlureState =&gt;',
'            kCof &lt;= kCoefVals.kCoeffBlure;',
'            if (upCtr = FloatMaxLat) then',
'                oCoeffProd.kCoeffBlure &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffBlure.kSet &lt;= kCoefVals.kCoeffBlure.kSet;',
'                kCoefStates &lt;= kCoefXSobeState;',
'            end if;',
'        when kCoefXSobeState =&gt;	',
'            kCof &lt;= kCoefVals.kCoefXSobel;',
'            if (upCtr = FloatMaxLat) then',
'                oCoeffProd.kCoefXSobel &lt;= kCofFrtProd;',
'                oCoeffProd.kCoefXSobel.kSet &lt;= kCoefVals.kCoefXSobel.kSet;',
'                kCoefStates &lt;= kCoefYSobeState;',
'            end if;',
'        when kCoefYSobeState =&gt;	',
'            kCof &lt;= kCoefVals.kCoefYSobel;',
'            if (upCtr = FloatMaxLat) then',
'                oCoeffProd.kCoefYSobel &lt;= kCofFrtProd;',
'                oCoeffProd.kCoefYSobel.kSet &lt;= kCoefVals.kCoefYSobel.kSet;',
'                kCoefStates &lt;= kCoefEmbosState;',
'            end if;',
'        when kCoefEmbosState =&gt;	',
'            kCof &lt;= kCoefVals.kCoeffEmbos;',
'            if (upCtr = FloatMaxLat) then',
'                oCoeffProd.kCoeffEmbos &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffEmbos.kSet &lt;= kCoefVals.kCoeffEmbos.kSet;',
'                kCoefStates &lt;= kCoefUpdaterState;',
'            end if;',
'        when kCoefUpdaterState =&gt;',
'                kCoefStates &lt;= kCoefUpdaterState;',
'            if (iKcoeff.kSet = kCoefVals.kCoeffYcbcr.kSet) then',
'                kCof                        &lt;= iKcoeff;',
'                oCoeffProd.kCoeffYcbcr      &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffYcbcr.kSet &lt;= kCoefYcbcrIndex;',
'            elsif(iKcoeff.kSet = kCoefVals.kCoeffCgain.kSet)then',
'                kCof                        &lt;= iKcoeff;',
'                oCoeffProd.kCoeffCgain      &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffCgain.kSet &lt;= kCoefCgainIndex;',
'            elsif(iKcoeff.kSet = kCoefVals.kCoeffSharp.kSet)then',
'                kCof                        &lt;= iKcoeff;',
'                oCoeffProd.kCoeffSharp      &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffSharp.kSet &lt;= kCoefSharpIndex;',
'            elsif(iKcoeff.kSet = kCoefVals.kCoeffBlure.kSet)then',
'                kCof                        &lt;= iKcoeff;',
'                oCoeffProd.kCoeffBlure      &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffBlure.kSet &lt;= kCoefBlureIndex;',
'            elsif(iKcoeff.kSet = kCoefVals.kCoefXSobel.kSet)then',
'                kCof                        &lt;= iKcoeff;',
'                oCoeffProd.kCoefXSobel      &lt;= kCofFrtProd;',
'                oCoeffProd.kCoefXSobel.kSet &lt;= kCoefSobeXIndex;',
'            elsif(iKcoeff.kSet = kCoefVals.kCoefYSobel.kSet)then',
'                kCof                        &lt;= iKcoeff;',
'                oCoeffProd.kCoefYSobel      &lt;= kCofFrtProd;',
'                oCoeffProd.kCoefYSobel.kSet &lt;= kCoefSobeYIndex;',
'            elsif(iKcoeff.kSet = kCoefVals.kCoeffEmbos.kSet)then',
'                kCof                        &lt;= iKcoeff;',
'                oCoeffProd.kCoeffEmbos      &lt;= kCofFrtProd;',
'                oCoeffProd.kCoeffEmbos.kSet &lt;= kCoefEmbosIndex;',
'            elsif(iKcoeff.kSet = kCoefVals.kCoef1Cgain.kSet)then',
'                kCof                        &lt;= iKcoeff;',
'                oCoeffProd.kCoef1Cgain      &lt;= kCofFrtProd;',
'                oCoeffProd.kCoef1Cgain.kSet &lt;= kCoefCgai1Index;',
'            else',
'                kCof                        &lt;= iKcoeff;',
'              --oCoeffProd.kCoeffYcbcr      &lt;= kCofFrtProd;',
'              --oCoeffProd.kCoeffYcbcr.kSet &lt;= zero;',
'              --oCoeffProd.kCoeffCgain      &lt;= kCofFrtProd;',
'              --oCoeffProd.kCoeffCgain.kSet &lt;= zero;',
'              --oCoeffProd.kCoeffSharp      &lt;= kCofFrtProd;',
'              --oCoeffProd.kCoeffSharp.kSet &lt;= zero;',
'              --oCoeffProd.kCoeffBlure      &lt;= kCofFrtProd;',
'              --oCoeffProd.kCoeffBlure.kSet &lt;= zero;',
'              --oCoeffProd.kCoefXSobel      &lt;= kCofFrtProd;',
'              --oCoeffProd.kCoefXSobel.kSet &lt;= zero;',
'              --oCoeffProd.kCoefYSobel      &lt;= kCofFrtProd;',
'              --oCoeffProd.kCoefYSobel.kSet &lt;= zero;',
'              --oCoeffProd.kCoeffEmbos      &lt;= kCofFrtProd;',
'              --oCoeffProd.kCoeffEmbos.kSet &lt;= zero;',
'            end if;',
'        when others =&gt;',
'            kCoefStates &lt;= kCoefUpdaterState;',
'        end case;',
'        end if;',
'    end if;',
'end process kCoefStP;',
'-----------------------------------------------------------------------------------------------',
'--Coeff To Float',
'-----------------------------------------------------------------------------------------------',
'FloatMultiplyTopFractLevelInst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; fractValue,',
'      iBdata     =&gt; rgbLevelValue,',
'      oRdata     =&gt; fractLevel);',
'-----------------------------------------------------------------------------------------------',
'WordToFloatTopK1inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k1,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k1);',
'WordToFloatTopK2inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k2,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k2);',
'WordToFloatTopK3inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k3,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k3);',
'WordToFloatTopK4inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k4,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k4);',
'WordToFloatTopK5inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k5,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k5);',
'WordToFloatTopK6inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k6,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k6);',
'WordToFloatTopK7inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k7,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k7);',
'WordToFloatTopK8inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k8,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k8);',
'WordToFloatTopK9inst: WordToFloatTop',
'    port map (',
'      aclk       =&gt; clk,',
'      rst_l      =&gt; rst_l,',
'      iValid     =&gt; kCoeffValid,',
'      iData      =&gt; kCof.k9,',
'      oValid     =&gt; open,',
'      oDataFloat =&gt; kCoeffDWord.k9);',
'FloatMultiplyTopK1Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k1,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k1);',
'FloatMultiplyTopK2Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k2,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k2);',
'FloatMultiplyTopK3Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k3,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k3);',
'FloatMultiplyTopK4Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k4,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k4);',
'FloatMultiplyTopK5Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k5,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k5);',
'FloatMultiplyTopK6Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k6,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k6);',
'FloatMultiplyTopK7Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k7,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k7);',
'FloatMultiplyTopK8Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k8,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k8);',
'FloatMultiplyTopK9Inst: FloatMultiplyTop',
'    port map (',
'      clk        =&gt; clk,',
'      iAdata     =&gt; kCoeffDWord.k9,',
'      iBdata     =&gt; fractLevel,',
'      oRdata     =&gt; kCofFrtProd.k9); ',
'end behavioral;'
];
countinueBuildStmtTable(g_sourceLines);
