
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-w>library</q-w> ieee;
<a name="2"><q-n>     2  </q-n></a><q-w>use</q-w> ieee.std_logic_1164.<q-w>all</q-w>;
<a name="3"><q-n>     3  </q-n></a><q-w>use</q-w> ieee.numeric_std.<q-w>all</q-w>;
<a name="4"><q-n>     4  </q-n></a><q-w>use</q-w> work.fixed_pkg.<q-w>all</q-w>;
<a name="5"><q-n>     5  </q-n></a><q-m>--use work.float_pkg.all;</q-m>
<a name="6"><q-n>     6  </q-n></a><q-w>use</q-w> work.constantspackage.<q-w>all</q-w>;
<a name="7"><q-n>     7  </q-n></a><q-w>use</q-w> work.vpfrecords.<q-w>all</q-w>;
<a name="8"><q-n>     8  </q-n></a><q-w>use</q-w> work.portspackage.<q-w>all</q-w>;
<a name="9"><q-n>     9  </q-n></a><q-w>entity</q-w> Filters <q-w>is</q-w>
<a name="10"><q-n>     10  </q-n></a><q-w>generic</q-w> (
<a name="11"><q-n>     11  </q-n></a>    F_TES                 : <q-t>boolean</q-w> := false;
<a name="12"><q-n>     12  </q-n></a>    F_LUM                 : <q-t>boolean</q-w> := false;
<a name="13"><q-n>     13  </q-n></a>    F_TRM                 : <q-t>boolean</q-w> := false;
<a name="14"><q-n>     14  </q-n></a>    F_RGB                 : <q-t>boolean</q-w> := false;
<a name="15"><q-n>     15  </q-n></a>    F_SHP                 : <q-t>boolean</q-w> := false;
<a name="16"><q-n>     16  </q-n></a>    F_BLU                 : <q-t>boolean</q-w> := false;
<a name="17"><q-n>     17  </q-n></a>    F_EMB                 : <q-t>boolean</q-w> := false;
<a name="18"><q-n>     18  </q-n></a>    F_YCC                 : <q-t>boolean</q-w> := false;
<a name="19"><q-n>     19  </q-n></a>    F_SOB                 : <q-t>boolean</q-w> := false;
<a name="20"><q-n>     20  </q-n></a>    F_CGA                 : <q-t>boolean</q-w> := false;
<a name="21"><q-n>     21  </q-n></a>    F_HSV                 : <q-t>boolean</q-w> := false;
<a name="22"><q-n>     22  </q-n></a>    F_HSL                 : <q-t>boolean</q-w> := false;
<a name="23"><q-n>     23  </q-n></a>    M_SOB_LUM             : <q-t>boolean</q-w> := false;
<a name="24"><q-n>     24  </q-n></a>    M_SOB_TRM             : <q-t>boolean</q-w> := false;
<a name="25"><q-n>     25  </q-n></a>    M_SOB_RGB             : <q-t>boolean</q-w> := false;
<a name="26"><q-n>     26  </q-n></a>    M_SOB_SHP             : <q-t>boolean</q-w> := false;
<a name="27"><q-n>     27  </q-n></a>    M_SOB_BLU             : <q-t>boolean</q-w> := false;
<a name="28"><q-n>     28  </q-n></a>    M_SOB_YCC             : <q-t>boolean</q-w> := false;
<a name="29"><q-n>     29  </q-n></a>    M_SOB_CGA             : <q-t>boolean</q-w> := false;
<a name="30"><q-n>     30  </q-n></a>    M_SOB_HSV             : <q-t>boolean</q-w> := false;
<a name="31"><q-n>     31  </q-n></a>    M_SOB_HSL             : <q-t>boolean</q-w> := false;
<a name="32"><q-n>     32  </q-n></a>    F_CGA_TO_CGA          : <q-t>boolean</q-w> := false;
<a name="33"><q-n>     33  </q-n></a>    F_CGA_TO_HSL          : <q-t>boolean</q-w> := false;
<a name="34"><q-n>     34  </q-n></a>    F_CGA_TO_HSV          : <q-t>boolean</q-w> := false;
<a name="35"><q-n>     35  </q-n></a>    F_CGA_TO_YCC          : <q-t>boolean</q-w> := false;
<a name="36"><q-n>     36  </q-n></a>    F_CGA_TO_SHP          : <q-t>boolean</q-w> := false;
<a name="37"><q-n>     37  </q-n></a>    F_CGA_TO_BLU          : <q-t>boolean</q-w> := false;
<a name="38"><q-n>     38  </q-n></a>    F_SHP_TO_SHP          : <q-t>boolean</q-w> := false;
<a name="39"><q-n>     39  </q-n></a>    F_SHP_TO_HSL          : <q-t>boolean</q-w> := false;
<a name="40"><q-n>     40  </q-n></a>    F_SHP_TO_HSV          : <q-t>boolean</q-w> := false;
<a name="41"><q-n>     41  </q-n></a>    F_SHP_TO_YCC          : <q-t>boolean</q-w> := false;
<a name="42"><q-n>     42  </q-n></a>    F_SHP_TO_CGA          : <q-t>boolean</q-w> := false;
<a name="43"><q-n>     43  </q-n></a>    F_SHP_TO_BLU          : <q-t>boolean</q-w> := false;
<a name="44"><q-n>     44  </q-n></a>    F_BLU_TO_BLU          : <q-t>boolean</q-w> := false;
<a name="45"><q-n>     45  </q-n></a>    F_BLU_TO_HSL          : <q-t>boolean</q-w> := false;
<a name="46"><q-n>     46  </q-n></a>    F_BLU_TO_HSV          : <q-t>boolean</q-w> := false;
<a name="47"><q-n>     47  </q-n></a>    F_BLU_TO_YCC          : <q-t>boolean</q-w> := false;
<a name="48"><q-n>     48  </q-n></a>    F_BLU_TO_CGA          : <q-t>boolean</q-w> := false;
<a name="49"><q-n>     49  </q-n></a>    F_BLU_TO_SHP          : <q-t>boolean</q-w> := false;
<a name="50"><q-n>     50  </q-n></a>    img_width             : <q-t>integer</q-w> := 4096;
<a name="51"><q-n>     51  </q-n></a>    img_height            : <q-t>integer</q-w> := 4096;
<a name="52"><q-n>     52  </q-n></a>    s_data_width          : <q-t>integer</q-w> := 16;
<a name="53"><q-n>     53  </q-n></a>    i_data_width          : <q-t>integer</q-w> := 8);
<a name="54"><q-n>     54  </q-n></a><q-w>port</q-w> (
<a name="55"><q-n>     55  </q-n></a>    clk                : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="56"><q-n>     56  </q-n></a>    rst_l              : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="57"><q-n>     57  </q-n></a>    txCord             : <q-a>in</q-w> coord;
<a name="58"><q-n>     58  </q-n></a>    iRgb               : <q-a>in</q-w> channel;
<a name="59"><q-n>     59  </q-n></a>    lumThreshold       : <q-a>in</q-w>  <q-t>std_logic_vector</q-w>(7 <q-w>downto</q-w> 0);
<a name="60"><q-n>     60  </q-n></a>    iThreshold         : <q-a>in</q-w> <q-t>std_logic_vector</q-w>(s_data_width-1 <q-w>downto</q-w> 0); 
<a name="61"><q-n>     61  </q-n></a>    cHsv               : <q-a>in</q-w> <q-t>std_logic_vector</q-w>(2 <q-w>downto</q-w> 0);
<a name="62"><q-n>     62  </q-n></a>    cYcc               : <q-a>in</q-w> <q-t>std_logic_vector</q-w>(2 <q-w>downto</q-w> 0);
<a name="63"><q-n>     63  </q-n></a>    iKcoeff            : <q-a>in</q-w> kernelCoeff;
<a name="64"><q-n>     64  </q-n></a>    edgeValid          : <q-a>out</q-w> <q-t>std_logic</q-w>;
<a name="65"><q-n>     65  </q-n></a>    oRgb               : <q-a>out</q-w> frameColors);
<a name="66"><q-n>     66  </q-n></a><q-w>end</q-w> Filters;
<a name="67"><q-n>     67  </q-n></a><q-w>architecture</q-w> Behavioral <q-w>of</q-w> Filters <q-w>is</q-w>
<a name="68"><q-n>     68  </q-n></a><q-w>signal</q-w> rgbImageKernel   : colors;
<a name="69"><q-n>     69  </q-n></a><q-w>constant</q-w> init_channel   : channel := (valid =&gt; lo, red =&gt; black, green =&gt; black, blue =&gt; black);
<a name="70"><q-n>     70  </q-n></a><q-w>signal</q-w> location         : cord := (x =&gt; 40, y =&gt; 10);
<a name="71"><q-n>     71  </q-n></a><q-w>signal</q-w> fRgb             : frameColors;
<a name="72"><q-n>     72  </q-n></a><q-w>signal</q-w> sEdgeValid       : <q-t>std_logic</q-w>;
<a name="73"><q-n>     73  </q-n></a><q-w>begin</q-w>
<a name="74"><q-n>     74  </q-n></a>    edgeValid           &lt;= sEdgeValid;
<a name="75"><q-n>     75  </q-n></a>    oRgb                &lt;= fRgb;
<a name="76"><q-n>     76  </q-n></a>ImageKernelInst: Kernel
<a name="77"><q-n>     77  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="78"><q-n>     78  </q-n></a>    INRGB_FRAME         =&gt; F_RGB,
<a name="79"><q-n>     79  </q-n></a>    RGBLP_FRAME         =&gt; F_LUM,
<a name="80"><q-n>     80  </q-n></a>    RGBTR_FRAME         =&gt; F_TRM,
<a name="81"><q-n>     81  </q-n></a>    SHARP_FRAME         =&gt; F_SHP,
<a name="82"><q-n>     82  </q-n></a>    BLURE_FRAME         =&gt; F_BLU,
<a name="83"><q-n>     83  </q-n></a>    EMBOS_FRAME         =&gt; F_EMB,
<a name="84"><q-n>     84  </q-n></a>    YCBCR_FRAME         =&gt; F_YCC,
<a name="85"><q-n>     85  </q-n></a>    SOBEL_FRAME         =&gt; F_SOB,
<a name="86"><q-n>     86  </q-n></a>    CGAIN_FRAME         =&gt; F_CGA,
<a name="87"><q-n>     87  </q-n></a>    CCGAIN_FRAME        =&gt; false,
<a name="88"><q-n>     88  </q-n></a>    HSV_FRAME           =&gt; F_HSV,
<a name="89"><q-n>     89  </q-n></a>    HSL_FRAME           =&gt; F_HSL,
<a name="90"><q-n>     90  </q-n></a>    img_width           =&gt; img_width,
<a name="91"><q-n>     91  </q-n></a>    img_height          =&gt; img_height,
<a name="92"><q-n>     92  </q-n></a>    s_data_width        =&gt; s_data_width,
<a name="93"><q-n>     93  </q-n></a>    i_data_width        =&gt; i_data_width)
<a name="94"><q-n>     94  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="95"><q-n>     95  </q-n></a>    clk                 =&gt; clk,
<a name="96"><q-n>     96  </q-n></a>    rst_l               =&gt; rst_l,
<a name="97"><q-n>     97  </q-n></a>    txCord              =&gt; txCord,
<a name="98"><q-n>     98  </q-n></a>    lumThreshold        =&gt; lumThreshold,
<a name="99"><q-n>     99  </q-n></a>    iThreshold          =&gt; iThreshold,
<a name="100"><q-n>     100  </q-n></a>    iRgb                =&gt; iRgb,
<a name="101"><q-n>     101  </q-n></a>    iKcoeff             =&gt; iKcoeff,
<a name="102"><q-n>     102  </q-n></a>    oEdgeValid          =&gt; sEdgeValid,
<a name="103"><q-n>     103  </q-n></a>    oRgb                =&gt; rgbImageKernel);
<a name="104"><q-n>     104  </q-n></a>CGA_TO_FILTRS1_FRAME_ENABLE: <q-w>if</q-w> (F_CGA_TO_HSV = true) <q-w>or</q-w> (F_CGA_TO_HSL = true) <q-w>or</q-w> (F_CGA_TO_YCC = true)  <q-w>or</q-w> (F_CGA_TO_SHP = true) <q-w>or</q-w> (F_CGA_TO_BLU = true) <q-w>or</q-w> (F_CGA_TO_CGA = true)<q-w>generate</q-w>
<a name="105"><q-n>     105  </q-n></a><q-w>signal</q-w> fRgb1             : colors;
<a name="106"><q-n>     106  </q-n></a><q-w>begin</q-w>
<a name="107"><q-n>     107  </q-n></a>ImageKernelInst: Kernel
<a name="108"><q-n>     108  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="109"><q-n>     109  </q-n></a>    INRGB_FRAME         =&gt; false,
<a name="110"><q-n>     110  </q-n></a>    RGBLP_FRAME         =&gt; F_LUM,
<a name="111"><q-n>     111  </q-n></a>    RGBTR_FRAME         =&gt; F_TRM,
<a name="112"><q-n>     112  </q-n></a>    SHARP_FRAME         =&gt; F_CGA_TO_SHP,
<a name="113"><q-n>     113  </q-n></a>    BLURE_FRAME         =&gt; F_CGA_TO_BLU,
<a name="114"><q-n>     114  </q-n></a>    EMBOS_FRAME         =&gt; false,
<a name="115"><q-n>     115  </q-n></a>    YCBCR_FRAME         =&gt; F_CGA_TO_YCC,
<a name="116"><q-n>     116  </q-n></a>    SOBEL_FRAME         =&gt; false,
<a name="117"><q-n>     117  </q-n></a>    CGAIN_FRAME         =&gt; false,
<a name="118"><q-n>     118  </q-n></a>    CCGAIN_FRAME        =&gt; F_CGA_TO_CGA,
<a name="119"><q-n>     119  </q-n></a>    HSV_FRAME           =&gt; F_CGA_TO_HSV,
<a name="120"><q-n>     120  </q-n></a>    HSL_FRAME           =&gt; F_CGA_TO_HSL,
<a name="121"><q-n>     121  </q-n></a>    img_width           =&gt; img_width,
<a name="122"><q-n>     122  </q-n></a>    img_height          =&gt; img_height,
<a name="123"><q-n>     123  </q-n></a>    s_data_width        =&gt; s_data_width,
<a name="124"><q-n>     124  </q-n></a>    i_data_width        =&gt; i_data_width)
<a name="125"><q-n>     125  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="126"><q-n>     126  </q-n></a>    clk                 =&gt; clk,
<a name="127"><q-n>     127  </q-n></a>    rst_l               =&gt; rst_l,
<a name="128"><q-n>     128  </q-n></a>    txCord              =&gt; txCord,
<a name="129"><q-n>     129  </q-n></a>    lumThreshold        =&gt; lumThreshold,
<a name="130"><q-n>     130  </q-n></a>    iThreshold          =&gt; iThreshold,
<a name="131"><q-n>     131  </q-n></a>    iRgb                =&gt; rgbImageKernel.cgain,
<a name="132"><q-n>     132  </q-n></a>    iKcoeff             =&gt; iKcoeff,
<a name="133"><q-n>     133  </q-n></a>    oEdgeValid          =&gt; sEdgeValid,
<a name="134"><q-n>     134  </q-n></a>    oRgb                =&gt; fRgb1);
<a name="135"><q-n>     135  </q-n></a>    fRgb.cgainToHsl     &lt;= fRgb1.hsl;
<a name="136"><q-n>     136  </q-n></a>    fRgb.cgainToHsv     &lt;= fRgb1.hsv;
<a name="137"><q-n>     137  </q-n></a>    fRgb.cgainToYcbcr   &lt;= fRgb1.ycbcr;
<a name="138"><q-n>     138  </q-n></a>    fRgb.cgainToShp     &lt;= fRgb1.sharp;
<a name="139"><q-n>     139  </q-n></a>    fRgb.cgainToBlu     &lt;= fRgb1.blur;
<a name="140"><q-n>     140  </q-n></a>    fRgb.cgainToCgain   &lt;= fRgb1.cgain;
<a name="141"><q-n>     141  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> CGA_TO_FILTRS1_FRAME_ENABLE;
<a name="142"><q-n>     142  </q-n></a>SHP_TO_FILTRS2_FRAME_ENABLE: <q-w>if</q-w> (F_SHP_TO_HSV = true) <q-w>or</q-w> (F_SHP_TO_HSL = true) <q-w>or</q-w> (F_SHP_TO_YCC = true)  <q-w>or</q-w> (F_SHP_TO_SHP = true) <q-w>or</q-w> (F_SHP_TO_BLU = true) <q-w>or</q-w> (F_SHP_TO_CGA = true) <q-w>generate</q-w>
<a name="143"><q-n>     143  </q-n></a><q-w>signal</q-w> fRgb2             : colors;
<a name="144"><q-n>     144  </q-n></a><q-w>begin</q-w>
<a name="145"><q-n>     145  </q-n></a>ImageKernelInst: Kernel
<a name="146"><q-n>     146  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="147"><q-n>     147  </q-n></a>    INRGB_FRAME         =&gt; false,
<a name="148"><q-n>     148  </q-n></a>    RGBLP_FRAME         =&gt; F_LUM,
<a name="149"><q-n>     149  </q-n></a>    RGBTR_FRAME         =&gt; F_TRM,
<a name="150"><q-n>     150  </q-n></a>    SHARP_FRAME         =&gt; F_SHP_TO_SHP,
<a name="151"><q-n>     151  </q-n></a>    BLURE_FRAME         =&gt; F_SHP_TO_BLU,
<a name="152"><q-n>     152  </q-n></a>    EMBOS_FRAME         =&gt; false,
<a name="153"><q-n>     153  </q-n></a>    YCBCR_FRAME         =&gt; F_SHP_TO_YCC,
<a name="154"><q-n>     154  </q-n></a>    SOBEL_FRAME         =&gt; false,
<a name="155"><q-n>     155  </q-n></a>    CGAIN_FRAME         =&gt; F_SHP_TO_CGA,
<a name="156"><q-n>     156  </q-n></a>    CCGAIN_FRAME        =&gt; false,
<a name="157"><q-n>     157  </q-n></a>    HSV_FRAME           =&gt; F_SHP_TO_HSV,
<a name="158"><q-n>     158  </q-n></a>    HSL_FRAME           =&gt; F_SHP_TO_HSL,
<a name="159"><q-n>     159  </q-n></a>    img_width           =&gt; img_width,
<a name="160"><q-n>     160  </q-n></a>    img_height          =&gt; img_height,
<a name="161"><q-n>     161  </q-n></a>    s_data_width        =&gt; s_data_width,
<a name="162"><q-n>     162  </q-n></a>    i_data_width        =&gt; i_data_width)
<a name="163"><q-n>     163  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="164"><q-n>     164  </q-n></a>    clk                 =&gt; clk,
<a name="165"><q-n>     165  </q-n></a>    rst_l               =&gt; rst_l,
<a name="166"><q-n>     166  </q-n></a>    txCord              =&gt; txCord,
<a name="167"><q-n>     167  </q-n></a>    lumThreshold        =&gt; lumThreshold,
<a name="168"><q-n>     168  </q-n></a>    iThreshold          =&gt; iThreshold,
<a name="169"><q-n>     169  </q-n></a>    iRgb                =&gt; rgbImageKernel.sharp,
<a name="170"><q-n>     170  </q-n></a>    iKcoeff             =&gt; iKcoeff,
<a name="171"><q-n>     171  </q-n></a>    oEdgeValid          =&gt; sEdgeValid,
<a name="172"><q-n>     172  </q-n></a>    oRgb                =&gt; fRgb2);
<a name="173"><q-n>     173  </q-n></a>    fRgb.shpToHsl       &lt;= fRgb2.hsl;
<a name="174"><q-n>     174  </q-n></a>    fRgb.shpToHsv       &lt;= fRgb2.hsv;
<a name="175"><q-n>     175  </q-n></a>    fRgb.shpToYcbcr     &lt;= fRgb2.ycbcr;
<a name="176"><q-n>     176  </q-n></a>    fRgb.shpToShp       &lt;= fRgb2.sharp;
<a name="177"><q-n>     177  </q-n></a>    fRgb.shpToBlu       &lt;= fRgb2.blur;
<a name="178"><q-n>     178  </q-n></a>    fRgb.shpToCgain     &lt;= fRgb2.cgain;
<a name="179"><q-n>     179  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> SHP_TO_FILTRS2_FRAME_ENABLE;
<a name="180"><q-n>     180  </q-n></a>BLU_TO_FILTRS3_FRAME_ENABLE: <q-w>if</q-w> (F_BLU_TO_HSV = true) <q-w>or</q-w> (F_BLU_TO_HSL = true) <q-w>or</q-w> (F_BLU_TO_YCC = true)  <q-w>or</q-w> (F_BLU_TO_SHP = true) <q-w>or</q-w> (F_BLU_TO_BLU = true) <q-w>or</q-w> (F_BLU_TO_CGA = true) <q-w>generate</q-w>
<a name="181"><q-n>     181  </q-n></a><q-w>signal</q-w> fRgb3             : colors;
<a name="182"><q-n>     182  </q-n></a><q-w>begin</q-w>
<a name="183"><q-n>     183  </q-n></a>ImageKernelInst: Kernel
<a name="184"><q-n>     184  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="185"><q-n>     185  </q-n></a>    INRGB_FRAME         =&gt; false,
<a name="186"><q-n>     186  </q-n></a>    RGBLP_FRAME         =&gt; F_LUM,
<a name="187"><q-n>     187  </q-n></a>    RGBTR_FRAME         =&gt; F_TRM,
<a name="188"><q-n>     188  </q-n></a>    SHARP_FRAME         =&gt; F_BLU_TO_SHP,
<a name="189"><q-n>     189  </q-n></a>    BLURE_FRAME         =&gt; F_BLU_TO_BLU,
<a name="190"><q-n>     190  </q-n></a>    EMBOS_FRAME         =&gt; false,
<a name="191"><q-n>     191  </q-n></a>    YCBCR_FRAME         =&gt; F_BLU_TO_YCC,
<a name="192"><q-n>     192  </q-n></a>    SOBEL_FRAME         =&gt; false,
<a name="193"><q-n>     193  </q-n></a>    CGAIN_FRAME         =&gt; F_BLU_TO_CGA,
<a name="194"><q-n>     194  </q-n></a>    CCGAIN_FRAME        =&gt; false,
<a name="195"><q-n>     195  </q-n></a>    HSV_FRAME           =&gt; F_BLU_TO_HSV,
<a name="196"><q-n>     196  </q-n></a>    HSL_FRAME           =&gt; F_BLU_TO_HSL,
<a name="197"><q-n>     197  </q-n></a>    img_width           =&gt; img_width,
<a name="198"><q-n>     198  </q-n></a>    img_height          =&gt; img_height,
<a name="199"><q-n>     199  </q-n></a>    s_data_width        =&gt; s_data_width,
<a name="200"><q-n>     200  </q-n></a>    i_data_width        =&gt; i_data_width)
<a name="201"><q-n>     201  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="202"><q-n>     202  </q-n></a>    clk                 =&gt; clk,
<a name="203"><q-n>     203  </q-n></a>    rst_l               =&gt; rst_l,
<a name="204"><q-n>     204  </q-n></a>    txCord              =&gt; txCord,
<a name="205"><q-n>     205  </q-n></a>    lumThreshold        =&gt; lumThreshold,
<a name="206"><q-n>     206  </q-n></a>    iThreshold          =&gt; iThreshold,
<a name="207"><q-n>     207  </q-n></a>    iRgb                =&gt; rgbImageKernel.sharp,
<a name="208"><q-n>     208  </q-n></a>    iKcoeff             =&gt; iKcoeff,
<a name="209"><q-n>     209  </q-n></a>    oEdgeValid          =&gt; sEdgeValid,
<a name="210"><q-n>     210  </q-n></a>    oRgb                =&gt; fRgb3);
<a name="211"><q-n>     211  </q-n></a>    fRgb.bluToHsl       &lt;= fRgb3.hsl;
<a name="212"><q-n>     212  </q-n></a>    fRgb.bluToHsv       &lt;= fRgb3.hsv;
<a name="213"><q-n>     213  </q-n></a>    fRgb.bluToYcc       &lt;= fRgb3.ycbcr;
<a name="214"><q-n>     214  </q-n></a>    fRgb.bluToShp       &lt;= fRgb3.sharp;
<a name="215"><q-n>     215  </q-n></a>    fRgb.bluToBlu       &lt;= fRgb3.blur;
<a name="216"><q-n>     216  </q-n></a>    fRgb.bluToCga       &lt;= fRgb3.cgain;
<a name="217"><q-n>     217  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> BLU_TO_FILTRS3_FRAME_ENABLE;
<a name="218"><q-n>     218  </q-n></a>TEST_FRAME_ENABLE: <q-w>if</q-w> (F_TES = true) <q-w>generate</q-w>
<a name="219"><q-n>     219  </q-n></a>    <q-w>signal</q-w> ChannelS      : <q-t>integer</q-w> := 0;
<a name="220"><q-n>     220  </q-n></a>    <q-w>signal</q-w> rgbSum        : tpRgb;
<a name="221"><q-n>     221  </q-n></a><q-w>begin</q-w>
<a name="222"><q-n>     222  </q-n></a>frameTestPatternInst: frameTestPattern
<a name="223"><q-n>     223  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="224"><q-n>     224  </q-n></a>    s_data_width =&gt; s_data_width)
<a name="225"><q-n>     225  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(   
<a name="226"><q-n>     226  </q-n></a>    clk          =&gt; clk,
<a name="227"><q-n>     227  </q-n></a>    iValid       =&gt; iRgb.valid,
<a name="228"><q-n>     228  </q-n></a>    iCord        =&gt; txCord,
<a name="229"><q-n>     229  </q-n></a>    oRgb         =&gt; rgbSum);
<a name="230"><q-n>     230  </q-n></a>TestPatternInst: TestPattern
<a name="231"><q-n>     231  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="232"><q-n>     232  </q-n></a>    clk           =&gt; clk,
<a name="233"><q-n>     233  </q-n></a>    ChannelS      =&gt; ChannelS,
<a name="234"><q-n>     234  </q-n></a>    rgbSum        =&gt; rgbSum,
<a name="235"><q-n>     235  </q-n></a>    oRgb          =&gt; fRgb.tPattern);
<a name="236"><q-n>     236  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> TEST_FRAME_ENABLE;
<a name="237"><q-n>     237  </q-n></a>MASK_SOB_CGA_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_CGA = true) <q-w>generate</q-w>
<a name="238"><q-n>     238  </q-n></a>    <q-w>signal</q-w> tp2cgain   : channel;
<a name="239"><q-n>     239  </q-n></a>    <q-w>signal</q-w> tp2        : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0) := (<q-w>others</q-w> =&gt; '0');
<a name="240"><q-n>     240  </q-n></a>    <q-w>alias</q-w> tp2Red      : <q-t>std_logic_vector</q-w>(7 <q-w>downto</q-w> 0) <q-w>is</q-w> tp2(23 <q-w>downto</q-w> 16);
<a name="241"><q-n>     241  </q-n></a>    <q-w>alias</q-w> tp2Green    : <q-t>std_logic_vector</q-w>(7 <q-w>downto</q-w> 0) <q-w>is</q-w> tp2(15 <q-w>downto</q-w> 8);
<a name="242"><q-n>     242  </q-n></a>    <q-w>alias</q-w> tp2Blue     : <q-t>std_logic_vector</q-w>(7 <q-w>downto</q-w> 0) <q-w>is</q-w> tp2(7 <q-w>downto</q-w> 0);
<a name="243"><q-n>     243  </q-n></a>    <q-w>signal</q-w> tpValid    : <q-t>std_logic</q-w>  := lo;
<a name="244"><q-n>     244  </q-n></a><q-w>begin</q-w>
<a name="245"><q-n>     245  </q-n></a>TapsControllerSobCgaInst: TapsController
<a name="246"><q-n>     246  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="247"><q-n>     247  </q-n></a>    img_width    =&gt; img_width,
<a name="248"><q-n>     248  </q-n></a>    tpDataWidth  =&gt; 24)
<a name="249"><q-n>     249  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="250"><q-n>     250  </q-n></a>    clk          =&gt; clk,
<a name="251"><q-n>     251  </q-n></a>    rst_l        =&gt; rst_l,
<a name="252"><q-n>     252  </q-n></a>    iRgb         =&gt; rgbImageKernel.cgain,
<a name="253"><q-n>     253  </q-n></a>    tpValid      =&gt; tpValid,
<a name="254"><q-n>     254  </q-n></a>    tp0          =&gt; <q-w>open</q-w>,
<a name="255"><q-n>     255  </q-n></a>    tp1          =&gt; <q-w>open</q-w>,
<a name="256"><q-n>     256  </q-n></a>    tp2          =&gt; tp2);
<a name="257"><q-n>     257  </q-n></a><q-w>process</q-w> (clk,rst_l) <q-w>begin</q-w>
<a name="258"><q-n>     258  </q-n></a>    <q-w>if</q-w> (rst_l = lo) <q-w>then</q-w>
<a name="259"><q-n>     259  </q-n></a>        tp2cgain.red   &lt;= black;
<a name="260"><q-n>     260  </q-n></a>        tp2cgain.green &lt;= black;
<a name="261"><q-n>     261  </q-n></a>        tp2cgain.blue  &lt;= black;
<a name="262"><q-n>     262  </q-n></a>        tp2cgain.valid &lt;= lo;
<a name="263"><q-n>     263  </q-n></a>    <q-w>elsif</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="264"><q-n>     264  </q-n></a>        tp2cgain.red   &lt;= tp2Red;
<a name="265"><q-n>     265  </q-n></a>        tp2cgain.green &lt;= tp2Green;
<a name="266"><q-n>     266  </q-n></a>        tp2cgain.blue  &lt;= tp2Blue;
<a name="267"><q-n>     267  </q-n></a>        tp2cgain.valid &lt;= tpValid;
<a name="268"><q-n>     268  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>; 
<a name="269"><q-n>     269  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="270"><q-n>     270  </q-n></a>FrameMaskInst: FrameMask
<a name="271"><q-n>     271  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="272"><q-n>     272  </q-n></a>    eBlack       =&gt; true)
<a name="273"><q-n>     273  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="274"><q-n>     274  </q-n></a>    clk         =&gt; clk,
<a name="275"><q-n>     275  </q-n></a>    reset       =&gt; rst_l,
<a name="276"><q-n>     276  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="277"><q-n>     277  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="278"><q-n>     278  </q-n></a>    i2Rgb       =&gt; tp2cgain,
<a name="279"><q-n>     279  </q-n></a>    oRgb        =&gt; fRgb.maskSobelCga);
<a name="280"><q-n>     280  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_CGA_FRAME_ENABLE;
<a name="281"><q-n>     281  </q-n></a>MASK_SOB_TRM_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_TRM = true) <q-w>generate</q-w>
<a name="282"><q-n>     282  </q-n></a><q-w>begin</q-w>
<a name="283"><q-n>     283  </q-n></a>FrameMaskInst: FrameMask
<a name="284"><q-n>     284  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="285"><q-n>     285  </q-n></a>    eBlack       =&gt; true)
<a name="286"><q-n>     286  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="287"><q-n>     287  </q-n></a>    clk         =&gt; clk,
<a name="288"><q-n>     288  </q-n></a>    reset       =&gt; rst_l,
<a name="289"><q-n>     289  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="290"><q-n>     290  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="291"><q-n>     291  </q-n></a>    i2Rgb       =&gt; rgbImageKernel.colorTrm,
<a name="292"><q-n>     292  </q-n></a>    oRgb        =&gt; fRgb.maskSobelTrm);
<a name="293"><q-n>     293  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_TRM_FRAME_ENABLE; 
<a name="294"><q-n>     294  </q-n></a>MASK_SOB_HSL_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_HSL = true) <q-w>generate</q-w>
<a name="295"><q-n>     295  </q-n></a>    <q-w>signal</q-w> dSobHsl           : channel;
<a name="296"><q-n>     296  </q-n></a>    <q-w>constant</q-w> sobHslPiDelay   : <q-t>integer</q-w> := 18;
<a name="297"><q-n>     297  </q-n></a><q-w>begin</q-w>
<a name="298"><q-n>     298  </q-n></a>dSobHsvPiDelayInst: SyncFrames
<a name="299"><q-n>     299  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="300"><q-n>     300  </q-n></a>    pixelDelay =&gt; sobHslPiDelay)
<a name="301"><q-n>     301  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="302"><q-n>     302  </q-n></a>    clk        =&gt; clk,
<a name="303"><q-n>     303  </q-n></a>    reset      =&gt; rst_l,
<a name="304"><q-n>     304  </q-n></a>    iRgb       =&gt; rgbImageKernel.hsl,
<a name="305"><q-n>     305  </q-n></a>    oRgb       =&gt; dSobHsl);
<a name="306"><q-n>     306  </q-n></a>FrameMaskInst: FrameMask
<a name="307"><q-n>     307  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="308"><q-n>     308  </q-n></a>    eBlack       =&gt; true)
<a name="309"><q-n>     309  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="310"><q-n>     310  </q-n></a>    clk         =&gt; clk,
<a name="311"><q-n>     311  </q-n></a>    reset       =&gt; rst_l,
<a name="312"><q-n>     312  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="313"><q-n>     313  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="314"><q-n>     314  </q-n></a>    i2Rgb       =&gt; dSobHsl,
<a name="315"><q-n>     315  </q-n></a>    oRgb        =&gt; fRgb.maskSobelHsl);
<a name="316"><q-n>     316  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_HSL_FRAME_ENABLE;  
<a name="317"><q-n>     317  </q-n></a>MASK_SOB_HSV_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_HSV = true) <q-w>generate</q-w>
<a name="318"><q-n>     318  </q-n></a>    <q-w>signal</q-w> dSobHsv           : channel;
<a name="319"><q-n>     319  </q-n></a>    <q-w>constant</q-w> sobHsvPiDelay   : <q-t>integer</q-w> := 18;
<a name="320"><q-n>     320  </q-n></a><q-w>begin</q-w>
<a name="321"><q-n>     321  </q-n></a>dSobHsvPiDelayInst: SyncFrames
<a name="322"><q-n>     322  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="323"><q-n>     323  </q-n></a>    pixelDelay =&gt; sobHsvPiDelay)
<a name="324"><q-n>     324  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="325"><q-n>     325  </q-n></a>    clk        =&gt; clk,
<a name="326"><q-n>     326  </q-n></a>    reset      =&gt; rst_l,
<a name="327"><q-n>     327  </q-n></a>    iRgb       =&gt; rgbImageKernel.hsv,
<a name="328"><q-n>     328  </q-n></a>    oRgb       =&gt; dSobHsv);
<a name="329"><q-n>     329  </q-n></a>FrameMaskInst: FrameMask
<a name="330"><q-n>     330  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="331"><q-n>     331  </q-n></a>    eBlack       =&gt; true)
<a name="332"><q-n>     332  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="333"><q-n>     333  </q-n></a>    clk         =&gt; clk,
<a name="334"><q-n>     334  </q-n></a>    reset       =&gt; rst_l,
<a name="335"><q-n>     335  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="336"><q-n>     336  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="337"><q-n>     337  </q-n></a>    i2Rgb       =&gt; dSobHsv,
<a name="338"><q-n>     338  </q-n></a>    oRgb        =&gt; fRgb.maskSobelHsv);
<a name="339"><q-n>     339  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_HSV_FRAME_ENABLE; 
<a name="340"><q-n>     340  </q-n></a>MASK_SOB_YCC_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_YCC = true) <q-w>generate</q-w>
<a name="341"><q-n>     341  </q-n></a><q-w>begin</q-w>
<a name="342"><q-n>     342  </q-n></a>FrameMaskInst: FrameMask
<a name="343"><q-n>     343  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="344"><q-n>     344  </q-n></a>    eBlack       =&gt; true)
<a name="345"><q-n>     345  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="346"><q-n>     346  </q-n></a>    clk         =&gt; clk,
<a name="347"><q-n>     347  </q-n></a>    reset       =&gt; rst_l,
<a name="348"><q-n>     348  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="349"><q-n>     349  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="350"><q-n>     350  </q-n></a>    i2Rgb       =&gt; rgbImageKernel.ycbcr,
<a name="351"><q-n>     351  </q-n></a>    oRgb        =&gt; fRgb.maskSobelYcc);
<a name="352"><q-n>     352  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_YCC_FRAME_ENABLE;   
<a name="353"><q-n>     353  </q-n></a>MASK_SOB_SHP_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_SHP = true) <q-w>generate</q-w>
<a name="354"><q-n>     354  </q-n></a><q-w>begin</q-w>
<a name="355"><q-n>     355  </q-n></a>FrameMaskInst: FrameMask
<a name="356"><q-n>     356  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="357"><q-n>     357  </q-n></a>    eBlack       =&gt; true)
<a name="358"><q-n>     358  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="359"><q-n>     359  </q-n></a>    clk         =&gt; clk,
<a name="360"><q-n>     360  </q-n></a>    reset       =&gt; rst_l,
<a name="361"><q-n>     361  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="362"><q-n>     362  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="363"><q-n>     363  </q-n></a>    i2Rgb       =&gt; rgbImageKernel.sharp,
<a name="364"><q-n>     364  </q-n></a>    oRgb        =&gt; fRgb.maskSobelShp);
<a name="365"><q-n>     365  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_SHP_FRAME_ENABLE;
<a name="366"><q-n>     366  </q-n></a>MASK_SOB_RGB_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_RGB = true) <q-w>generate</q-w>
<a name="367"><q-n>     367  </q-n></a>    <q-w>constant</q-w> sobRgbPiDelay : <q-t>integer</q-w> := 14;
<a name="368"><q-n>     368  </q-n></a>    <q-w>signal</q-w> tp2inrgb        : channel;
<a name="369"><q-n>     369  </q-n></a>    <q-w>signal</q-w> tp2             : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0) := (<q-w>others</q-w> =&gt; '0');
<a name="370"><q-n>     370  </q-n></a>    <q-w>alias</q-w> tp2Red           : <q-t>std_logic_vector</q-w>(7 <q-w>downto</q-w> 0) <q-w>is</q-w> tp2(23 <q-w>downto</q-w> 16);
<a name="371"><q-n>     371  </q-n></a>    <q-w>alias</q-w> tp2Green         : <q-t>std_logic_vector</q-w>(7 <q-w>downto</q-w> 0) <q-w>is</q-w> tp2(15 <q-w>downto</q-w> 8);
<a name="372"><q-n>     372  </q-n></a>    <q-w>alias</q-w> tp2Blue          : <q-t>std_logic_vector</q-w>(7 <q-w>downto</q-w> 0) <q-w>is</q-w> tp2(7 <q-w>downto</q-w> 0);
<a name="373"><q-n>     373  </q-n></a>    <q-w>signal</q-w> tpValid         : <q-t>std_logic</q-w>  := lo;
<a name="374"><q-n>     374  </q-n></a>    <q-w>signal</q-w> d1Rgb           : channel;
<a name="375"><q-n>     375  </q-n></a><q-w>begin</q-w>
<a name="376"><q-n>     376  </q-n></a>TapsControllerSobCgaInst: TapsController
<a name="377"><q-n>     377  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="378"><q-n>     378  </q-n></a>    img_width    =&gt; img_width,
<a name="379"><q-n>     379  </q-n></a>    tpDataWidth  =&gt; 24)
<a name="380"><q-n>     380  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="381"><q-n>     381  </q-n></a>    clk          =&gt; clk,
<a name="382"><q-n>     382  </q-n></a>    rst_l        =&gt; rst_l,
<a name="383"><q-n>     383  </q-n></a>    iRgb         =&gt; rgbImageKernel.inrgb,
<a name="384"><q-n>     384  </q-n></a>    tpValid      =&gt; tpValid,
<a name="385"><q-n>     385  </q-n></a>    tp0          =&gt; <q-w>open</q-w>,
<a name="386"><q-n>     386  </q-n></a>    tp1          =&gt; <q-w>open</q-w>,
<a name="387"><q-n>     387  </q-n></a>    tp2          =&gt; tp2);
<a name="388"><q-n>     388  </q-n></a><q-w>process</q-w> (clk,rst_l) <q-w>begin</q-w>
<a name="389"><q-n>     389  </q-n></a>    <q-w>if</q-w> (rst_l = lo) <q-w>then</q-w>
<a name="390"><q-n>     390  </q-n></a>        tp2inrgb.red   &lt;= black;
<a name="391"><q-n>     391  </q-n></a>        tp2inrgb.green &lt;= black;
<a name="392"><q-n>     392  </q-n></a>        tp2inrgb.blue  &lt;= black;
<a name="393"><q-n>     393  </q-n></a>        tp2inrgb.valid &lt;= lo;
<a name="394"><q-n>     394  </q-n></a>    <q-w>elsif</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="395"><q-n>     395  </q-n></a>        tp2inrgb.red   &lt;= tp2Red;
<a name="396"><q-n>     396  </q-n></a>        tp2inrgb.green &lt;= tp2Green;
<a name="397"><q-n>     397  </q-n></a>        tp2inrgb.blue  &lt;= tp2Blue;
<a name="398"><q-n>     398  </q-n></a>        tp2inrgb.valid &lt;= tpValid;
<a name="399"><q-n>     399  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>; 
<a name="400"><q-n>     400  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="401"><q-n>     401  </q-n></a>sobRgbPiDelayInst: SyncFrames
<a name="402"><q-n>     402  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="403"><q-n>     403  </q-n></a>    pixelDelay =&gt; sobRgbPiDelay)
<a name="404"><q-n>     404  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="405"><q-n>     405  </q-n></a>    clk        =&gt; clk,
<a name="406"><q-n>     406  </q-n></a>    reset      =&gt; rst_l,
<a name="407"><q-n>     407  </q-n></a>    iRgb       =&gt; tp2inrgb,
<a name="408"><q-n>     408  </q-n></a>    oRgb       =&gt; d1Rgb);
<a name="409"><q-n>     409  </q-n></a>FrameMaskInst: FrameMask
<a name="410"><q-n>     410  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="411"><q-n>     411  </q-n></a>    eBlack       =&gt; true)
<a name="412"><q-n>     412  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="413"><q-n>     413  </q-n></a>    clk         =&gt; clk,
<a name="414"><q-n>     414  </q-n></a>    reset       =&gt; rst_l,
<a name="415"><q-n>     415  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="416"><q-n>     416  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="417"><q-n>     417  </q-n></a>    i2Rgb       =&gt; d1Rgb,
<a name="418"><q-n>     418  </q-n></a>    oRgb        =&gt; fRgb.maskSobelRgb);
<a name="419"><q-n>     419  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_RGB_FRAME_ENABLE;
<a name="420"><q-n>     420  </q-n></a>MASK_SOB_LUM_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_LUM = true) <q-w>generate</q-w>
<a name="421"><q-n>     421  </q-n></a><q-w>begin</q-w>
<a name="422"><q-n>     422  </q-n></a>FrameMaskInst: FrameMask
<a name="423"><q-n>     423  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="424"><q-n>     424  </q-n></a>    eBlack       =&gt; true)
<a name="425"><q-n>     425  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="426"><q-n>     426  </q-n></a>    clk         =&gt; clk,
<a name="427"><q-n>     427  </q-n></a>    reset       =&gt; rst_l,
<a name="428"><q-n>     428  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="429"><q-n>     429  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="430"><q-n>     430  </q-n></a>    i2Rgb       =&gt; rgbImageKernel.colorLmp,
<a name="431"><q-n>     431  </q-n></a>    oRgb        =&gt; fRgb.maskSobelLum);
<a name="432"><q-n>     432  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_LUM_FRAME_ENABLE;
<a name="433"><q-n>     433  </q-n></a>MASK_SOB_BLU_FRAME_ENABLE: <q-w>if</q-w> (M_SOB_BLU = true) <q-w>generate</q-w>
<a name="434"><q-n>     434  </q-n></a><q-w>begin</q-w>
<a name="435"><q-n>     435  </q-n></a>FrameMaskInst: FrameMask
<a name="436"><q-n>     436  </q-n></a><q-w>generic</q-w> <q-w>map</q-w> (
<a name="437"><q-n>     437  </q-n></a>    eBlack       =&gt; true)
<a name="438"><q-n>     438  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(            
<a name="439"><q-n>     439  </q-n></a>    clk         =&gt; clk,
<a name="440"><q-n>     440  </q-n></a>    reset       =&gt; rst_l,
<a name="441"><q-n>     441  </q-n></a>    iEdgeValid  =&gt; sEdgeValid,
<a name="442"><q-n>     442  </q-n></a>    i1Rgb       =&gt; rgbImageKernel.sobel,
<a name="443"><q-n>     443  </q-n></a>    i2Rgb       =&gt; rgbImageKernel.blur,
<a name="444"><q-n>     444  </q-n></a>    oRgb        =&gt; fRgb.maskSobelBlu);
<a name="445"><q-n>     445  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_BLU_FRAME_ENABLE;
<a name="446"><q-n>     446  </q-n></a>INRGB_FRAME_ENABLE: <q-w>if</q-w> (F_RGB = true) <q-w>generate</q-w>
<a name="447"><q-n>     447  </q-n></a>    fRgb.inrgb &lt;= rgbImageKernel.inrgb;
<a name="448"><q-n>     448  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> INRGB_FRAME_ENABLE;
<a name="449"><q-n>     449  </q-n></a><q-m>-- INRGB_FRAME_ENABLE: if (F_RGB = true) generate</q-m>
<a name="450"><q-n>     450  </q-n></a><q-m>-- begin</q-m>
<a name="451"><q-n>     451  </q-n></a><q-m>-- TextGenInrgbInst: TextGen</q-m>
<a name="452"><q-n>     452  </q-n></a><q-m>-- generic map (</q-m>
<a name="453"><q-n>     453  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="454"><q-n>     454  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="455"><q-n>     455  </q-n></a>    <q-m>-- displayText   =&gt; "INRGB")</q-m>
<a name="456"><q-n>     456  </q-n></a><q-m>-- port map(            </q-m>
<a name="457"><q-n>     457  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="458"><q-n>     458  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="459"><q-n>     459  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="460"><q-n>     460  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="461"><q-n>     461  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.inrgb,</q-m>
<a name="462"><q-n>     462  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.inrgb);</q-m>
<a name="463"><q-n>     463  </q-n></a><q-m>-- end generate INRGB_FRAME_ENABLE;</q-m>
<a name="464"><q-n>     464  </q-n></a>YCBCR_FRAME_ENABLE: <q-w>if</q-w> (F_YCC = true) <q-w>generate</q-w>
<a name="465"><q-n>     465  </q-n></a><q-w>signal</q-w> rgbYcbcr   : channel;
<a name="466"><q-n>     466  </q-n></a><q-w>begin</q-w>
<a name="467"><q-n>     467  </q-n></a><q-m>-- TextGenYcbcrInst: TextGen</q-m>
<a name="468"><q-n>     468  </q-n></a><q-m>-- generic map (</q-m>
<a name="469"><q-n>     469  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="470"><q-n>     470  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="471"><q-n>     471  </q-n></a>    <q-m>-- displayText   =&gt; "YCBCR")</q-m>
<a name="472"><q-n>     472  </q-n></a><q-m>-- port map(            </q-m>
<a name="473"><q-n>     473  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="474"><q-n>     474  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="475"><q-n>     475  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="476"><q-n>     476  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="477"><q-n>     477  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.ycbcr,</q-m>
<a name="478"><q-n>     478  </q-n></a>    <q-m>-- oRgb     =&gt; rgbYcbcr);</q-m>
<a name="479"><q-n>     479  </q-n></a>rgbYcbcr &lt;= rgbImageKernel.ycbcr;
<a name="480"><q-n>     480  </q-n></a><q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="481"><q-n>     481  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="482"><q-n>     482  </q-n></a>        <q-w>if</q-w>(cYcc = <q-l>"001"</q-l>)<q-w>then</q-w>
<a name="483"><q-n>     483  </q-n></a>            fRgb.ycbcr.red       &lt;= rgbYcbcr.red;
<a name="484"><q-n>     484  </q-n></a>            fRgb.ycbcr.green     &lt;= rgbYcbcr.red;
<a name="485"><q-n>     485  </q-n></a>            fRgb.ycbcr.blue      &lt;= rgbYcbcr.red;
<a name="486"><q-n>     486  </q-n></a>            fRgb.ycbcr.valid     &lt;= rgbYcbcr.valid;
<a name="487"><q-n>     487  </q-n></a>        <q-w>elsif</q-w>(cYcc = <q-l>"010"</q-l>)<q-w>then</q-w>
<a name="488"><q-n>     488  </q-n></a>            fRgb.ycbcr.red       &lt;= rgbYcbcr.green;
<a name="489"><q-n>     489  </q-n></a>            fRgb.ycbcr.green     &lt;= rgbYcbcr.green;
<a name="490"><q-n>     490  </q-n></a>            fRgb.ycbcr.blue      &lt;= rgbYcbcr.green;
<a name="491"><q-n>     491  </q-n></a>            fRgb.ycbcr.valid     &lt;= rgbYcbcr.valid;
<a name="492"><q-n>     492  </q-n></a>        <q-w>elsif</q-w>(cYcc = <q-l>"100"</q-l>)<q-w>then</q-w>
<a name="493"><q-n>     493  </q-n></a>            fRgb.ycbcr.red       &lt;= rgbYcbcr.blue;
<a name="494"><q-n>     494  </q-n></a>            fRgb.ycbcr.green     &lt;= rgbYcbcr.blue;
<a name="495"><q-n>     495  </q-n></a>            fRgb.ycbcr.blue      &lt;= rgbYcbcr.blue;
<a name="496"><q-n>     496  </q-n></a>            fRgb.ycbcr.valid     &lt;= rgbYcbcr.valid;
<a name="497"><q-n>     497  </q-n></a>        <q-w>else</q-w>
<a name="498"><q-n>     498  </q-n></a>            fRgb.ycbcr.red       &lt;= rgbYcbcr.red;
<a name="499"><q-n>     499  </q-n></a>            fRgb.ycbcr.green     &lt;= rgbYcbcr.green;
<a name="500"><q-n>     500  </q-n></a>            fRgb.ycbcr.blue      &lt;= rgbYcbcr.blue;
<a name="501"><q-n>     501  </q-n></a>            fRgb.ycbcr.valid     &lt;= rgbYcbcr.valid;
<a name="502"><q-n>     502  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="503"><q-n>     503  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="504"><q-n>     504  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="505"><q-n>     505  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> YCBCR_FRAME_ENABLE;
<a name="506"><q-n>     506  </q-n></a>SHARP_FRAME_ENABLE: <q-w>if</q-w> (F_SHP = true) <q-w>generate</q-w>
<a name="507"><q-n>     507  </q-n></a><q-m>-- begin</q-m>
<a name="508"><q-n>     508  </q-n></a><q-m>-- TextGenSharpInst: TextGen</q-m>
<a name="509"><q-n>     509  </q-n></a><q-m>-- generic map (</q-m>
<a name="510"><q-n>     510  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="511"><q-n>     511  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="512"><q-n>     512  </q-n></a>    <q-m>-- displayText   =&gt; "SHARP")</q-m>
<a name="513"><q-n>     513  </q-n></a><q-m>-- port map(            </q-m>
<a name="514"><q-n>     514  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="515"><q-n>     515  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="516"><q-n>     516  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="517"><q-n>     517  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="518"><q-n>     518  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.sharp,</q-m>
<a name="519"><q-n>     519  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.sharp);</q-m>
<a name="520"><q-n>     520  </q-n></a>fRgb.sharp &lt;= rgbImageKernel.sharp;
<a name="521"><q-n>     521  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> SHARP_FRAME_ENABLE;
<a name="522"><q-n>     522  </q-n></a>BLURE_FRAME_ENABLE: <q-w>if</q-w> (F_BLU = true) <q-w>generate</q-w>
<a name="523"><q-n>     523  </q-n></a><q-m>-- begin</q-m>
<a name="524"><q-n>     524  </q-n></a><q-m>-- TextGenBlurInst: TextGen</q-m>
<a name="525"><q-n>     525  </q-n></a><q-m>-- generic map (</q-m>
<a name="526"><q-n>     526  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="527"><q-n>     527  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="528"><q-n>     528  </q-n></a>    <q-m>-- displayText   =&gt; "BLUR")</q-m>
<a name="529"><q-n>     529  </q-n></a><q-m>-- port map(            </q-m>
<a name="530"><q-n>     530  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="531"><q-n>     531  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="532"><q-n>     532  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="533"><q-n>     533  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="534"><q-n>     534  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.blur,</q-m>
<a name="535"><q-n>     535  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.blur);</q-m>
<a name="536"><q-n>     536  </q-n></a>fRgb.blur &lt;= rgbImageKernel.blur;
<a name="537"><q-n>     537  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> BLURE_FRAME_ENABLE;
<a name="538"><q-n>     538  </q-n></a>EMBOS_FRAME_ENABLE: <q-w>if</q-w> (F_EMB = true) <q-w>generate</q-w>
<a name="539"><q-n>     539  </q-n></a><q-m>-- begin</q-m>
<a name="540"><q-n>     540  </q-n></a><q-m>-- TextGenEmbossInst: TextGen</q-m>
<a name="541"><q-n>     541  </q-n></a><q-m>-- generic map (</q-m>
<a name="542"><q-n>     542  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="543"><q-n>     543  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="544"><q-n>     544  </q-n></a>    <q-m>-- displayText   =&gt; "EMBOSS")</q-m>
<a name="545"><q-n>     545  </q-n></a><q-m>-- port map(            </q-m>
<a name="546"><q-n>     546  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="547"><q-n>     547  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="548"><q-n>     548  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="549"><q-n>     549  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="550"><q-n>     550  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.embos,</q-m>
<a name="551"><q-n>     551  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.embos);</q-m>
<a name="552"><q-n>     552  </q-n></a>fRgb.embos &lt;= rgbImageKernel.embos;
<a name="553"><q-n>     553  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> EMBOS_FRAME_ENABLE;
<a name="554"><q-n>     554  </q-n></a>SOBEL_FRAME_ENABLE: <q-w>if</q-w> (F_SOB = true) <q-w>generate</q-w>
<a name="555"><q-n>     555  </q-n></a>    fRgb.sobel &lt;= rgbImageKernel.sobel;
<a name="556"><q-n>     556  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> SOBEL_FRAME_ENABLE;
<a name="557"><q-n>     557  </q-n></a><q-m>-- SOBEL_FRAME_ENABLE: if (F_SOB = true) generate</q-m>
<a name="558"><q-n>     558  </q-n></a><q-m>-- begin</q-m>
<a name="559"><q-n>     559  </q-n></a><q-m>-- TextGenSobelInst: TextGen</q-m>
<a name="560"><q-n>     560  </q-n></a><q-m>-- generic map (</q-m>
<a name="561"><q-n>     561  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="562"><q-n>     562  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="563"><q-n>     563  </q-n></a>    <q-m>-- displayText   =&gt; "SOBEL")</q-m>
<a name="564"><q-n>     564  </q-n></a><q-m>-- port map(            </q-m>
<a name="565"><q-n>     565  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="566"><q-n>     566  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="567"><q-n>     567  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="568"><q-n>     568  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="569"><q-n>     569  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.sobel,</q-m>
<a name="570"><q-n>     570  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.sobel);</q-m>
<a name="571"><q-n>     571  </q-n></a><q-m>-- end generate SOBEL_FRAME_ENABLE;</q-m>
<a name="572"><q-n>     572  </q-n></a>CGAIN_FRAME_ENABLE: <q-w>if</q-w> (F_CGA = true) <q-w>generate</q-w>
<a name="573"><q-n>     573  </q-n></a><q-m>-- begin</q-m>
<a name="574"><q-n>     574  </q-n></a><q-m>-- TextGenCgainInst: TextGen</q-m>
<a name="575"><q-n>     575  </q-n></a><q-m>-- generic map (</q-m>
<a name="576"><q-n>     576  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="577"><q-n>     577  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="578"><q-n>     578  </q-n></a>    <q-m>-- displayText   =&gt; "CGAIN")</q-m>
<a name="579"><q-n>     579  </q-n></a><q-m>-- port map(            </q-m>
<a name="580"><q-n>     580  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="581"><q-n>     581  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="582"><q-n>     582  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="583"><q-n>     583  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="584"><q-n>     584  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.cgain,</q-m>
<a name="585"><q-n>     585  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.cgain);</q-m>
<a name="586"><q-n>     586  </q-n></a>fRgb.cgain &lt;= rgbImageKernel.cgain;
<a name="587"><q-n>     587  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> CGAIN_FRAME_ENABLE;
<a name="588"><q-n>     588  </q-n></a>HSL_FRAME_ENABLE: <q-w>if</q-w> (F_HSL = true) <q-w>generate</q-w>
<a name="589"><q-n>     589  </q-n></a>    fRgb.hsl &lt;= rgbImageKernel.hsl;
<a name="590"><q-n>     590  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> HSL_FRAME_ENABLE;
<a name="591"><q-n>     591  </q-n></a><q-m>-- HSL_FRAME_ENABLE: if (F_HSL = true) generate</q-m>
<a name="592"><q-n>     592  </q-n></a><q-m>-- begin</q-m>
<a name="593"><q-n>     593  </q-n></a><q-m>-- TextGenHslInst: TextGen</q-m>
<a name="594"><q-n>     594  </q-n></a><q-m>-- generic map (</q-m>
<a name="595"><q-n>     595  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="596"><q-n>     596  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="597"><q-n>     597  </q-n></a>    <q-m>-- displayText   =&gt; "HSL")</q-m>
<a name="598"><q-n>     598  </q-n></a><q-m>-- port map(            </q-m>
<a name="599"><q-n>     599  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="600"><q-n>     600  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="601"><q-n>     601  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="602"><q-n>     602  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="603"><q-n>     603  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.hsl,</q-m>
<a name="604"><q-n>     604  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.hsl);</q-m>
<a name="605"><q-n>     605  </q-n></a><q-m>-- end generate HSL_FRAME_ENABLE;</q-m>
<a name="606"><q-n>     606  </q-n></a>HSV_FRAME_ENABLE: <q-w>if</q-w> (F_HSV = true) <q-w>generate</q-w>
<a name="607"><q-n>     607  </q-n></a><q-w>signal</q-w> rgbHsv   : channel;
<a name="608"><q-n>     608  </q-n></a><q-w>begin</q-w>
<a name="609"><q-n>     609  </q-n></a><q-m>-- TextGenHsvInst: TextGen</q-m>
<a name="610"><q-n>     610  </q-n></a><q-m>-- generic map (</q-m>
<a name="611"><q-n>     611  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="612"><q-n>     612  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="613"><q-n>     613  </q-n></a>    <q-m>-- displayText   =&gt; "HSV")</q-m>
<a name="614"><q-n>     614  </q-n></a><q-m>-- port map(            </q-m>
<a name="615"><q-n>     615  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="616"><q-n>     616  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="617"><q-n>     617  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="618"><q-n>     618  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="619"><q-n>     619  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.hsv,</q-m>
<a name="620"><q-n>     620  </q-n></a>    <q-m>-- oRgb     =&gt; rgbHsv);</q-m>
<a name="621"><q-n>     621  </q-n></a>rgbHsv &lt;= rgbImageKernel.hsv;
<a name="622"><q-n>     622  </q-n></a><q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="623"><q-n>     623  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="624"><q-n>     624  </q-n></a>        <q-w>if</q-w>(cHsv = <q-l>"001"</q-l>)<q-w>then</q-w>
<a name="625"><q-n>     625  </q-n></a>            fRgb.hsv.red       &lt;= rgbHsv.red;
<a name="626"><q-n>     626  </q-n></a>            fRgb.hsv.green     &lt;= rgbHsv.red;
<a name="627"><q-n>     627  </q-n></a>            fRgb.hsv.blue      &lt;= rgbHsv.red;
<a name="628"><q-n>     628  </q-n></a>            fRgb.hsv.valid     &lt;= rgbHsv.valid;
<a name="629"><q-n>     629  </q-n></a>        <q-w>elsif</q-w>(cHsv = <q-l>"010"</q-l>)<q-w>then</q-w>
<a name="630"><q-n>     630  </q-n></a>            fRgb.hsv.red       &lt;= rgbHsv.green;
<a name="631"><q-n>     631  </q-n></a>            fRgb.hsv.green     &lt;= rgbHsv.green;
<a name="632"><q-n>     632  </q-n></a>            fRgb.hsv.blue      &lt;= rgbHsv.green;
<a name="633"><q-n>     633  </q-n></a>            fRgb.hsv.valid     &lt;= rgbHsv.valid;
<a name="634"><q-n>     634  </q-n></a>        <q-w>elsif</q-w>(cHsv = <q-l>"100"</q-l>)<q-w>then</q-w>
<a name="635"><q-n>     635  </q-n></a>            fRgb.hsv.red       &lt;= rgbHsv.blue;
<a name="636"><q-n>     636  </q-n></a>            fRgb.hsv.green     &lt;= rgbHsv.blue;
<a name="637"><q-n>     637  </q-n></a>            fRgb.hsv.blue      &lt;= rgbHsv.blue;
<a name="638"><q-n>     638  </q-n></a>            fRgb.hsv.valid     &lt;= rgbHsv.valid;
<a name="639"><q-n>     639  </q-n></a>        <q-w>else</q-w>
<a name="640"><q-n>     640  </q-n></a>            fRgb.hsv.red       &lt;= rgbHsv.red;
<a name="641"><q-n>     641  </q-n></a>            fRgb.hsv.green     &lt;= rgbHsv.green;
<a name="642"><q-n>     642  </q-n></a>            fRgb.hsv.blue      &lt;= rgbHsv.blue;
<a name="643"><q-n>     643  </q-n></a>            fRgb.hsv.valid     &lt;= rgbHsv.valid;
<a name="644"><q-n>     644  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="645"><q-n>     645  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="646"><q-n>     646  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="647"><q-n>     647  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> HSV_FRAME_ENABLE;
<a name="648"><q-n>     648  </q-n></a>LUM_FRAME_ENABLE: <q-w>if</q-w> (F_LUM = true) <q-w>generate</q-w>
<a name="649"><q-n>     649  </q-n></a><q-m>-- begin</q-m>
<a name="650"><q-n>     650  </q-n></a><q-m>-- TextGenHsvInst: TextGen</q-m>
<a name="651"><q-n>     651  </q-n></a><q-m>-- generic map (</q-m>
<a name="652"><q-n>     652  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="653"><q-n>     653  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="654"><q-n>     654  </q-n></a>    <q-m>-- displayText   =&gt; "LUM")</q-m>
<a name="655"><q-n>     655  </q-n></a><q-m>-- port map(            </q-m>
<a name="656"><q-n>     656  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="657"><q-n>     657  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="658"><q-n>     658  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="659"><q-n>     659  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="660"><q-n>     660  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.colorLmp,</q-m>
<a name="661"><q-n>     661  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.colorLmp);</q-m>
<a name="662"><q-n>     662  </q-n></a>fRgb.colorLmp &lt;= rgbImageKernel.colorLmp;
<a name="663"><q-n>     663  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> LUM_FRAME_ENABLE;
<a name="664"><q-n>     664  </q-n></a>TRM_FRAME_ENABLE: <q-w>if</q-w> (F_TRM = true) <q-w>generate</q-w>
<a name="665"><q-n>     665  </q-n></a><q-m>-- begin</q-m>
<a name="666"><q-n>     666  </q-n></a><q-m>-- TextGenTrmInst: TextGen</q-m>
<a name="667"><q-n>     667  </q-n></a><q-m>-- generic map (</q-m>
<a name="668"><q-n>     668  </q-n></a>    <q-m>-- img_width     =&gt; img_width,</q-m>
<a name="669"><q-n>     669  </q-n></a>    <q-m>-- img_height    =&gt; img_height,</q-m>
<a name="670"><q-n>     670  </q-n></a>    <q-m>-- displayText   =&gt; "TRM")</q-m>
<a name="671"><q-n>     671  </q-n></a><q-m>-- port map(            </q-m>
<a name="672"><q-n>     672  </q-n></a>    <q-m>-- clk      =&gt; clk,</q-m>
<a name="673"><q-n>     673  </q-n></a>    <q-m>-- rst_l    =&gt; rst_l,</q-m>
<a name="674"><q-n>     674  </q-n></a>    <q-m>-- txCord   =&gt; txCord,</q-m>
<a name="675"><q-n>     675  </q-n></a>    <q-m>-- location =&gt; location,</q-m>
<a name="676"><q-n>     676  </q-n></a>    <q-m>-- iRgb     =&gt; rgbImageKernel.colorTrm,</q-m>
<a name="677"><q-n>     677  </q-n></a>    <q-m>-- oRgb     =&gt; fRgb.colorTrm);</q-m>
<a name="678"><q-n>     678  </q-n></a>fRgb.colorTrm &lt;= rgbImageKernel.colorTrm;
<a name="679"><q-n>     679  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> TRM_FRAME_ENABLE;
<a name="680"><q-n>     680  </q-n></a>MASK_SOB_CGA_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_CGA = false) <q-w>generate</q-w>
<a name="681"><q-n>     681  </q-n></a>    fRgb.maskSobelCga  &lt;= init_channel;
<a name="682"><q-n>     682  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_CGA_FRAME_DISABLED;
<a name="683"><q-n>     683  </q-n></a>MASK_SOB_TRM_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_TRM = false) <q-w>generate</q-w>
<a name="684"><q-n>     684  </q-n></a>    fRgb.maskSobelTrm  &lt;= init_channel;
<a name="685"><q-n>     685  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_TRM_FRAME_DISABLED;
<a name="686"><q-n>     686  </q-n></a>MASK_SOB_HSL_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_HSL = false) <q-w>generate</q-w>
<a name="687"><q-n>     687  </q-n></a>    fRgb.maskSobelHsl  &lt;= init_channel;
<a name="688"><q-n>     688  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_HSL_FRAME_DISABLED;
<a name="689"><q-n>     689  </q-n></a>MASK_SOB_HSV_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_HSV = false) <q-w>generate</q-w>
<a name="690"><q-n>     690  </q-n></a>    fRgb.maskSobelHsv  &lt;= init_channel;
<a name="691"><q-n>     691  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_HSV_FRAME_DISABLED;
<a name="692"><q-n>     692  </q-n></a>MASK_SOB_YCC_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_YCC = false) <q-w>generate</q-w>
<a name="693"><q-n>     693  </q-n></a>    fRgb.maskSobelYcc  &lt;= init_channel;
<a name="694"><q-n>     694  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_YCC_FRAME_DISABLED;
<a name="695"><q-n>     695  </q-n></a>MASK_SOB_SHP_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_SHP = false) <q-w>generate</q-w>
<a name="696"><q-n>     696  </q-n></a>    fRgb.maskSobelShp  &lt;= init_channel;
<a name="697"><q-n>     697  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_SHP_FRAME_DISABLED;
<a name="698"><q-n>     698  </q-n></a>MASK_SOB_RGB_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_RGB = false) <q-w>generate</q-w>
<a name="699"><q-n>     699  </q-n></a>    fRgb.maskSobelRgb  &lt;= init_channel;
<a name="700"><q-n>     700  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_RGB_FRAME_DISABLED;
<a name="701"><q-n>     701  </q-n></a>MASK_SOB_LUM_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_LUM = false) <q-w>generate</q-w>
<a name="702"><q-n>     702  </q-n></a>    fRgb.maskSobelLum  &lt;= init_channel;
<a name="703"><q-n>     703  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_LUM_FRAME_DISABLED;
<a name="704"><q-n>     704  </q-n></a>MASK_SOB_BLU_FRAME_DISABLED: <q-w>if</q-w> (M_SOB_BLU = false) <q-w>generate</q-w>
<a name="705"><q-n>     705  </q-n></a>    fRgb.maskSobelBlu  &lt;= init_channel;
<a name="706"><q-n>     706  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> MASK_SOB_BLU_FRAME_DISABLED;
<a name="707"><q-n>     707  </q-n></a>LUM_FRAME_DISABLED: <q-w>if</q-w> (F_LUM = false) <q-w>generate</q-w>
<a name="708"><q-n>     708  </q-n></a>    fRgb.colorLmp  &lt;= init_channel;
<a name="709"><q-n>     709  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> LUM_FRAME_DISABLED;
<a name="710"><q-n>     710  </q-n></a>TRM_FRAME_DISABLED: <q-w>if</q-w> (F_TRM = false) <q-w>generate</q-w>
<a name="711"><q-n>     711  </q-n></a>    fRgb.colorTrm  &lt;= init_channel;
<a name="712"><q-n>     712  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> TRM_FRAME_DISABLED;
<a name="713"><q-n>     713  </q-n></a>INRGB_FRAME_DISABLED: <q-w>if</q-w> (F_RGB = false) <q-w>generate</q-w>
<a name="714"><q-n>     714  </q-n></a>    fRgb.inrgb     &lt;= init_channel;
<a name="715"><q-n>     715  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> INRGB_FRAME_DISABLED;
<a name="716"><q-n>     716  </q-n></a>YCBCR_FRAME_DISABLED: <q-w>if</q-w> (F_YCC = false) <q-w>generate</q-w>
<a name="717"><q-n>     717  </q-n></a>    fRgb.ycbcr     &lt;= init_channel;
<a name="718"><q-n>     718  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> YCBCR_FRAME_DISABLED;
<a name="719"><q-n>     719  </q-n></a>SHARP_FRAME_DISABLED: <q-w>if</q-w> (F_SHP = false) <q-w>generate</q-w>
<a name="720"><q-n>     720  </q-n></a>    fRgb.sharp     &lt;= init_channel;
<a name="721"><q-n>     721  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> SHARP_FRAME_DISABLED;
<a name="722"><q-n>     722  </q-n></a>BLURE_FRAME_DISABLED: <q-w>if</q-w> (F_BLU = false) <q-w>generate</q-w>
<a name="723"><q-n>     723  </q-n></a>    fRgb.blur     &lt;= init_channel;
<a name="724"><q-n>     724  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> BLURE_FRAME_DISABLED;
<a name="725"><q-n>     725  </q-n></a>EMBOS_FRAME_DISABLED: <q-w>if</q-w> (F_EMB = false) <q-w>generate</q-w>
<a name="726"><q-n>     726  </q-n></a>    fRgb.embos     &lt;= init_channel;
<a name="727"><q-n>     727  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> EMBOS_FRAME_DISABLED;
<a name="728"><q-n>     728  </q-n></a>SOBEL_FRAME_DISABLED: <q-w>if</q-w> (F_SOB = false) <q-w>generate</q-w>
<a name="729"><q-n>     729  </q-n></a>    fRgb.sobel     &lt;= init_channel;
<a name="730"><q-n>     730  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> SOBEL_FRAME_DISABLED;
<a name="731"><q-n>     731  </q-n></a>CGAIN_FRAME_DISABLED: <q-w>if</q-w> (F_CGA = false) <q-w>generate</q-w>
<a name="732"><q-n>     732  </q-n></a>    fRgb.cgain     &lt;= init_channel;
<a name="733"><q-n>     733  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> CGAIN_FRAME_DISABLED;
<a name="734"><q-n>     734  </q-n></a>HSL_FRAME_DISABLED: <q-w>if</q-w> (F_HSL = false) <q-w>generate</q-w>
<a name="735"><q-n>     735  </q-n></a>    fRgb.hsl     &lt;= init_channel;
<a name="736"><q-n>     736  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> HSL_FRAME_DISABLED;
<a name="737"><q-n>     737  </q-n></a>HSV_FRAME_DISABLED: <q-w>if</q-w> (F_HSV = false) <q-w>generate</q-w>
<a name="738"><q-n>     738  </q-n></a>    fRgb.hsv     &lt;= init_channel;
<a name="739"><q-n>     739  </q-n></a><q-w>end</q-w> <q-w>generate</q-w> HSV_FRAME_DISABLED;
<a name="740"><q-n>     740  </q-n></a><q-w>end</q-w> Behavioral;</pre>
</tt>

  
</body>
</html>
