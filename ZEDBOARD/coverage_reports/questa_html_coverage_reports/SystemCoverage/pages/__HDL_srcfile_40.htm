
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>// UVM_SEQUENCE : AXI4_STREAM_MASTER_SEQUENCER [AXI4_STREAM]</q-m>
<a name="2"><q-n>     2  </q-n></a><q-w>class</q-w> axi4_stream_master_sequencer <q-w>extends</q-w> uvm_sequencer #(axi4_stream_valid_cycle);
<a name="3"><q-n>     3  </q-n></a>    `uvm_component_utils(axi4_stream_master_sequencer)
<a name="4"><q-n>     4  </q-n></a>    <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name, uvm_component parent);
<a name="5"><q-n>     5  </q-n></a>        <q-w>super</q-w>.<q-w>new</q-w>(name, parent);
<a name="6"><q-n>     6  </q-n></a>    <q-w>endfunction</q-w>
<a name="7"><q-n>     7  </q-n></a><q-w>endclass</q-w>: axi4_stream_master_sequencer
<a name="8"><q-n>     8  </q-n></a>
<a name="9"><q-n>     9  </q-n></a><q-m>// UVM_SEQUENCE : AXI4_STREAM_MASTER_SEQUENCE [AXI4_STREAM]</q-m>
<a name="10"><q-n>     10  </q-n></a><q-w>class</q-w> axi4_stream_master_sequence <q-w>extends</q-w> uvm_sequence#(axi4_stream_valid_cycle);
<a name="11"><q-n>     11  </q-n></a>	`uvm_object_utils(axi4_stream_master_sequence)
<a name="12"><q-n>     12  </q-n></a>	<q-w>rand</q-w> <q-w>int</q-w> delay;
<a name="13"><q-n>     13  </q-n></a>	<q-w>rand</q-w> ax_packet_transaction response;
<a name="14"><q-n>     14  </q-n></a>	<q-w>rand</q-w> <q-w>bit</q-w> error_response;
<a name="15"><q-n>     15  </q-n></a>    <q-w>event</q-w> item_available;
<a name="16"><q-n>     16  </q-n></a>	<q-w>constraint</q-w> delay_c {
<a name="17"><q-n>     17  </q-n></a>		delay <q-w>dist</q-w> {0:=4, [0:9]:=8, [10:30]:=2, [31:100]:=1};
<a name="18"><q-n>     18  </q-n></a>	}
<a name="19"><q-n>     19  </q-n></a>    <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name = <q-l>""</q-l>);
<a name="20"><q-n>     20  </q-n></a>        <q-w>super</q-w>.<q-w>new</q-w>(name);
<a name="21"><q-n>     21  </q-n></a>    <q-w>endfunction</q-w>: <q-w>new</q-w>
<a name="22"><q-n>     22  </q-n></a>
<a name="23"><q-n>     23  </q-n></a>    <q-w>task</q-w> body();
<a name="24"><q-n>     24  </q-n></a>        axi4_stream_valid_cycle vc;
<a name="25"><q-n>     25  </q-n></a>        <q-w>repeat</q-w>(1000) <q-w>begin</q-w>
<a name="26"><q-n>     26  </q-n></a>        vc = axi4_stream_valid_cycle::type_id::create(.name(<q-l>"vc"</q-l>), .contxt(get_full_name()));
<a name="27"><q-n>     27  </q-n></a>        start_item(vc);
<a name="28"><q-n>     28  </q-n></a>            <q-w>assert</q-w>(vc.randomize());
<a name="29"><q-n>     29  </q-n></a>        finish_item(vc);
<a name="30"><q-n>     30  </q-n></a>        <q-w>end</q-w>
<a name="31"><q-n>     31  </q-n></a>    <q-w>endtask</q-w> : body
<a name="32"><q-n>     32  </q-n></a>
<a name="33"><q-n>     33  </q-n></a><q-w>endclass</q-w>: axi4_stream_master_sequence</pre>
</tt>

  
</body>
</html>
