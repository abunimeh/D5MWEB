
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>// UVM_TEST : axi_lite_TEST [AXI4_LITE]</q-m>
<a name="2"><q-n>     2  </q-n></a><q-w>class</q-w> axi_lite_test <q-w>extends</q-w> uvm_test;
<a name="3"><q-n>     3  </q-n></a>    `uvm_component_utils(axi_lite_test)
<a name="4"><q-n>     4  </q-n></a>    template_env aL_env;
<a name="5"><q-n>     5  </q-n></a>    <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name, uvm_component parent);
<a name="6"><q-n>     6  </q-n></a>        <q-w>super</q-w>.<q-w>new</q-w>(name, parent);
<a name="7"><q-n>     7  </q-n></a>    <q-w>endfunction</q-w>: <q-w>new</q-w>
<a name="8"><q-n>     8  </q-n></a>    <q-w>function</q-w> <q-w>void</q-w> build_phase(uvm_phase phase);
<a name="9"><q-n>     9  </q-n></a>        <q-w>super</q-w>.build_phase(phase);
<a name="10"><q-n>     10  </q-n></a>        <q-w>begin</q-w>
<a name="11"><q-n>     11  </q-n></a>            axi_lite_configuration axi_lite_cfg;
<a name="12"><q-n>     12  </q-n></a>            axi_lite_cfg = <q-w>new</q-w>;
<a name="13"><q-n>     13  </q-n></a>            <q-w>assert</q-w>(axi_lite_cfg.randomize());
<a name="14"><q-n>     14  </q-n></a>            uvm_config_db#(axi_lite_configuration)::set(.cntxt(<q-w>this</q-w>),.inst_name(<q-l>"*"</q-l>),.field_name(<q-l>"config"</q-l>),.value(axi_lite_cfg));
<a name="15"><q-n>     15  </q-n></a>            aL_env = template_env::type_id::create(.name(<q-l>"aL_env"</q-l>),.parent(<q-w>this</q-w>));
<a name="16"><q-n>     16  </q-n></a>        <q-w>end</q-w>
<a name="17"><q-n>     17  </q-n></a>    <q-w>endfunction</q-w>: build_phase
<a name="18"><q-n>     18  </q-n></a>    <q-w>function</q-w> <q-w>void</q-w> end_of_elaboration_phase(uvm_phase phase);
<a name="19"><q-n>     19  </q-n></a>        <q-w>super</q-w>.end_of_elaboration_phase(phase);
<a name="20"><q-n>     20  </q-n></a>        <q-w>this</q-w>.print();
<a name="21"><q-n>     21  </q-n></a>        factory.print();
<a name="22"><q-n>     22  </q-n></a>    <q-w>endfunction</q-w>
<a name="23"><q-n>     23  </q-n></a>    <q-w>task</q-w> run_phase(uvm_phase phase);
<a name="24"><q-n>     24  </q-n></a>        axi_lite_directed_sequence    axi_lite_seq;
<a name="25"><q-n>     25  </q-n></a>        phase.raise_objection(.obj(<q-w>this</q-w>));
<a name="26"><q-n>     26  </q-n></a>        axi_lite_seq = axi_lite_directed_sequence::type_id::create(.name(<q-l>"axi_lite_seq"</q-l>));
<a name="27"><q-n>     27  </q-n></a>        <q-w>assert</q-w>(axi_lite_seq.randomize());
<a name="28"><q-n>     28  </q-n></a>        `uvm_info(<q-l>"aL_env"</q-l>, { <q-l>"\n"</q-l>, axi_lite_seq.sprint() }, UVM_LOW)
<a name="29"><q-n>     29  </q-n></a>        axi_lite_seq.start(aL_env.aL_agt.aL_sqr);
<a name="30"><q-n>     30  </q-n></a>        phase.drop_objection(.obj(<q-w>this</q-w>));
<a name="31"><q-n>     31  </q-n></a>    <q-w>endtask</q-w>: run_phase
<a name="32"><q-n>     32  </q-n></a><q-w>endclass</q-w>: axi_lite_test</pre>
</tt>

  
</body>
</html>
