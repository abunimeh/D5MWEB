
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>// UVM_MONITOR : TEMPLATE_MONITOR_PREDICT [TEMPLATE]</q-m>
<a name="2"><q-n>     2  </q-n></a><q-m>//The second axi4_monitor, monitor_afterToDut, will get both inputs </q-m>
<a name="3"><q-n>     3  </q-n></a><q-m>//and make a prediction of the expected result. </q-m>
<a name="4"><q-n>     4  </q-n></a><q-m>//The scoreboard will get this predicted result as well and make a comparison between the two values.</q-m>
<a name="5"><q-n>     5  </q-n></a><q-w>class</q-w> template_monitor_predict <q-w>extends</q-w> uvm_monitor;
<a name="6"><q-n>     6  </q-n></a>    `uvm_component_utils(template_monitor_predict)
<a name="7"><q-n>     7  </q-n></a>    uvm_analysis_port#(tp_transaction)  mon_ap_afterToDut;
<a name="8"><q-n>     8  </q-n></a>    <q-w>virtual</q-w> tp_if                       tp_vif;
<a name="9"><q-n>     9  </q-n></a>    tp_transaction                      tx_pred;
<a name="10"><q-n>     10  </q-n></a>    tp_transaction                      sa_tx_cg;
<a name="11"><q-n>     11  </q-n></a>    <q-w>covergroup</q-w> template_cg;
<a name="12"><q-n>     12  </q-n></a>              ina_cp:     <q-w>coverpoint</q-w> sa_tx_cg.ina;
<a name="13"><q-n>     13  </q-n></a>              inb_cp:     <q-w>coverpoint</q-w> sa_tx_cg.inb;
<a name="14"><q-n>     14  </q-n></a>              ida_cp:     <q-w>coverpoint</q-w> sa_tx_cg.idata;
<a name="15"><q-n>     15  </q-n></a>              
<a name="16"><q-n>     16  </q-n></a>        <q-w>cross</q-w> ina_cp, inb_cp, ida_cp;
<a name="17"><q-n>     17  </q-n></a>    <q-w>endgroup</q-w>: template_cg
<a name="18"><q-n>     18  </q-n></a>    <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name, uvm_component parent);
<a name="19"><q-n>     19  </q-n></a>        <q-w>super</q-w>.<q-w>new</q-w>(name, parent);
<a name="20"><q-n>     20  </q-n></a>        template_cg = <q-w>new</q-w>;
<a name="21"><q-n>     21  </q-n></a>    <q-w>endfunction</q-w>: <q-w>new</q-w>
<a name="22"><q-n>     22  </q-n></a>    <q-w>function</q-w> <q-w>void</q-w> build_phase(uvm_phase phase);
<a name="23"><q-n>     23  </q-n></a>        <q-w>super</q-w>.build_phase(phase);
<a name="24"><q-n>     24  </q-n></a>        <q-w>void</q-w>'(uvm_resource_db#(<q-w>virtual</q-w> tp_if)::read_by_name(.scope(<q-l>"ifs"</q-l>), .name(<q-l>"tp_if"</q-l>), .val(tp_vif)));
<a name="25"><q-n>     25  </q-n></a>        mon_ap_afterToDut= <q-w>new</q-w>(.name(<q-l>"mon_ap_afterToDut"</q-l>), .parent(<q-w>this</q-w>));
<a name="26"><q-n>     26  </q-n></a>    <q-w>endfunction</q-w>: build_phase
<a name="27"><q-n>     27  </q-n></a>    <q-w>task</q-w> run_phase(uvm_phase phase);
<a name="28"><q-n>     28  </q-n></a>        <q-w>integer</q-w> counter_mon = 0, state = 0;
<a name="29"><q-n>     29  </q-n></a>        tx_pred = tp_transaction::type_id::create(.name(<q-l>"tx_pred"</q-l>), .contxt(get_full_name()));
<a name="30"><q-n>     30  </q-n></a>        <q-w>forever</q-w> <q-w>begin</q-w>
<a name="31"><q-n>     31  </q-n></a>            @(<q-a>posedge</q-w> tp_vif.sig_clock)
<a name="32"><q-n>     32  </q-n></a>            <q-w>begin</q-w>
<a name="33"><q-n>     33  </q-n></a>                <q-w>if</q-w>(tp_vif.sig_en_i==1'b1)
<a name="34"><q-n>     34  </q-n></a>                <q-w>begin</q-w>
<a name="35"><q-n>     35  </q-n></a>                    state  = 1;
<a name="36"><q-n>     36  </q-n></a>                    tx_pred.ina = 2'b00;
<a name="37"><q-n>     37  </q-n></a>                    tx_pred.inb = 2'b00;
<a name="38"><q-n>     38  </q-n></a>                    tx_pred.outValTbs = 3'b000;
<a name="39"><q-n>     39  </q-n></a>                <q-w>end</q-w>
<a name="40"><q-n>     40  </q-n></a>                <q-w>if</q-w>(state==1)
<a name="41"><q-n>     41  </q-n></a>                <q-w>begin</q-w>
<a name="42"><q-n>     42  </q-n></a>                    tx_pred.ina    = tx_pred.ina &lt;&lt; 1;
<a name="43"><q-n>     43  </q-n></a>                    tx_pred.inb    = tx_pred.inb &lt;&lt; 1;
<a name="44"><q-n>     44  </q-n></a>                    tx_pred.ina[0] = tp_vif.sig_ina;
<a name="45"><q-n>     45  </q-n></a>                    tx_pred.inb[0] = tp_vif.sig_inb;
<a name="46"><q-n>     46  </q-n></a>                    counter_mon = counter_mon + 1;
<a name="47"><q-n>     47  </q-n></a>                    <q-w>if</q-w>(counter_mon==3)
<a name="48"><q-n>     48  </q-n></a>                    <q-w>begin</q-w>
<a name="49"><q-n>     49  </q-n></a>                        state = 0;
<a name="50"><q-n>     50  </q-n></a>                        counter_mon = 1;
<a name="51"><q-n>     51  </q-n></a>                        <q-m>//Predict the result</q-m>
<a name="52"><q-n>     52  </q-n></a>                        predictor();
<a name="53"><q-n>     53  </q-n></a>                        sa_tx_cg = tx_pred;
<a name="54"><q-n>     54  </q-n></a>                        <q-m>//Coverage</q-m>
<a name="55"><q-n>     55  </q-n></a>                        template_cg.sample();
<a name="56"><q-n>     56  </q-n></a>                        <q-m>//Send the transaction to the analysis port</q-m>
<a name="57"><q-n>     57  </q-n></a>                        mon_ap_afterToDut.write(tx_pred);
<a name="58"><q-n>     58  </q-n></a>                    <q-w>end</q-w>
<a name="59"><q-n>     59  </q-n></a>                <q-w>end</q-w>
<a name="60"><q-n>     60  </q-n></a>            <q-w>end</q-w>
<a name="61"><q-n>     61  </q-n></a>        <q-w>end</q-w>
<a name="62"><q-n>     62  </q-n></a>    <q-w>endtask</q-w>: run_phase
<a name="63"><q-n>     63  </q-n></a>    <q-w>virtual</q-w> <q-w>function</q-w> <q-w>void</q-w> predictor();
<a name="64"><q-n>     64  </q-n></a>        tx_pred.outValTbs = tx_pred.ina + tx_pred.inb;<q-m>//Predicted value</q-m>
<a name="65"><q-n>     65  </q-n></a>    <q-w>endfunction</q-w>: predictor
<a name="66"><q-n>     66  </q-n></a><q-w>endclass</q-w>: template_monitor_predict</pre>
</tt>

  
</body>
</html>
